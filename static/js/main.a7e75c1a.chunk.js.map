{"version":3,"sources":["action/api.js","action/totalstats.action.js","reducer/totalstats.reducer.js","action/countryStats.action.js","reducer/countryStats.reducer.js","reducer/index.js","action/store.js","component/common/pageheader.component.jsx","component/chart/mapChart.component.jsx","component/statistics/countryStats.component.jsx","utils/geoCountryData.js","component/chart/pieChart.component.jsx","component/statistics/countryCaseStats.component.jsx","component/statistics/totalStats.component.jsx","layout/defaultLayout.jsx","App.js","index.js"],"names":["CountryStatConfiguration","TotalStatConfiguration","url","config","get","axios","fetch","ACTION_TYPES","initialState","totalFigure","geoData","allCountryData","reducers","combineReducers","TotalStats","state","action","type","payload","CountryStats","composeEnhancer","compose","store","createStore","applyMiddleware","thunk","Pageheader","subtitle","title","className","attrs","classes","classNames","xs","sm","render","DisplayMapChart","props","chart","Chart","container","autoFit","height","padding","scale","x","sync","y","coordinate","reflect","legend","axis","tooltip","showTitle","shared","showMarkers","containerTpl","itemTpl","domStyles","borderRadius","backgroundColor","border","ds","DataSet","dv","createView","source","transform","projection","as","bgView","data","rows","polygon","position","style","fill","stroke","lineWidth","fillOpacity","userData","countryData","callback","obj","projectedCoord","geoProjectPosition","longitude","latitude","deaths","totalDeaths","magnitude","totalCases","pointView","point","size","shape","color","active","interaction","small","length","id","GeoLocation","countryName","name","country","filter","DisplayPieChart","chartData","formatter","val","radius","innerRadius","annotation","text","content","fontSize","textAlign","offsetY","innerChartTitle","offsetX","interval","adjust","item","percent","value","searchInput","chartInnerTitle","renderKey","previousSearch","filterResult","CountryCaseStats","useState","setstate","caseSensitive","labelKey","option","onChange","console","log","Array","isArray","options","countryCaseData","placeholder","theme","onClick","noSearchRecordRender","percentageActive","toFixed","percentageCritical","critical","percentageRecovered","recovered","percentageDeaths","push","count","parseFloat","key","this","variation","label","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","canvasHeight","ref","canvasRef","shortid","React","Component","DefaultLayout","dispatch","useDispatch","useEffect","api","then","response","catch","err","useSelector","map","geolocation","cases","total","fluid","noGutters","statistic_taken_at","total_cases","total_deaths","total_recovered","new_cases","new_deaths","lg","md","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7e75c1a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst CountryStatConfiguration = {\n\n    \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n    }\n}\n\nconst TotalStatConfiguration = {\n\n    \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\":\"coronavirus-monitor-v2.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n    }\n}\n\n\nexport default {\n\n    TotalStats(url = \"https://coronavirus-monitor-v2.p.rapidapi.com/coronavirus/worldstat.php\", config = TotalStatConfiguration) {\n        return {\n            get: () => axios.get(url, config)\n        }\n    },\n   CountryStats(url = \"https://covid-193.p.rapidapi.com/statistics\", config = CountryStatConfiguration) {\n        return {\n            get: () => axios.get(url, config),\n            fetch: () => axios.get(\"https://g2.antv.vision/en/examples/data/world.geo.json\") \n        }\n\n    }\n}","import api from \"./api\"\n\nexport const ACTION_TYPES ={\n    FETCH : \"FETCH\"\n}\n\nexport const fetch = () => dispatch => {\n      api.TotalStats().get()\n    .then( response => {\n        dispatch({\n            type: ACTION_TYPES.FETCH,\n            payload: response.data\n        })\n    })\n    .catch(err => console.log(err))\n}\n","import { ACTION_TYPES } from \"../action/totalstats.action\"\n\nconst initialState = {\n    totalFigure : []\n}\n\nexport const TotalStats = (state = initialState, action) => {\n\n        switch (action.type) {\n            case ACTION_TYPES.FETCH:\n                return{\n                    ...state,\n                    totalFigure: action.payload\n                }\n            default:\n                return state;\n        }\n}","import api from \"./api\"\n\n\nexport const ACTION_TYPES = {\n    FETCHDVDATA: \"FECTHDVDATA\",\n    GET :\"GET\"\n}\n\nexport const fetch = () => dispatch => {\n    api.CountryStats().get()\n  .then(response => {\n      dispatch ({\n          type: ACTION_TYPES.GET,\n          payload: response.data\n      })\n  })\n  .catch(err => console.log(err))\n}\n\nexport const fetchDvData = () => dispatch => {\n      api.CountryStats().fetch()\n    .then(response => {\n        dispatch ({\n            type: ACTION_TYPES.FETCHDVDATA,\n            payload: response.data\n        })\n    })\n    .catch(err => console.log(err))\n}","import { ACTION_TYPES } from '../action/countryStats.action';\n\n\nconst initialState = {\n    geoData: [],\n    allCountryData: []\n}\n\nexport const CountryStats = (state = initialState, action) => {\n\n    switch (action.type) {\n        \n        case ACTION_TYPES.FETCHDVDATA:\n            return{\n                ...state,\n                geoData: action.payload\n            }\n        case ACTION_TYPES.GET:\n            return{\n                ...state,\n                allCountryData: action.payload\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from  'redux';\nimport { TotalStats } from  '../reducer/totalstats.reducer' ;\nimport { CountryStats } from  '../reducer/countryStats.reducer';\n\n\nexport const reducers = combineReducers ({\n    TotalStats,CountryStats\n})\n\n","import { compose,applyMiddleware,createStore } from \"redux\";\nimport  thunk from \"redux-thunk\";\nimport { reducers } from \"../reducer\";\n\n// const composeEnhancer =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composeEnhancer = compose;\n\nexport const store = createStore(\n    reducers,\n    composeEnhancer (applyMiddleware(thunk))\n)","import React from 'react';\nimport classNames from 'classnames';\nimport { Col } from 'shards-react';\n\n\n\n\nconst Pageheader = ({subtitle,title, className, ...attrs}) => {\n\n    const classes = classNames(\n        className,\n        \"text-center\",\n        \"text-md-center\",\n        \"mb-sm-0\"\n      );\n\n    return (\n\n        <Col xs=\"12\" sm=\"12\" className={classes} {...attrs}>\n            <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n            <h3 className=\"page-title\">{title}</h3>\n        </Col>\n    );\n}\n\nexport default Pageheader;","import React from \"react\";\nimport { Chart } from '@antv/g2';\nimport DataSet from '@antv/data-set';\n\nlet render = true\nconst DisplayMapChart = (props) => {\n\n    if(render){\n        const chart = new Chart({\n            container: 'container',\n            autoFit: true,\n            height: 500,\n            padding: [0, 20, 40]\n          });\n      \n          chart.scale({\n            x: { sync: true },\n            y: { sync: true }\n          });\n      \n          chart.coordinate('rect').reflect('y');\n          chart.legend(false);\n          chart.axis(false);\n      \n          chart.tooltip({\n            showTitle: false,\n            shared: true,\n            showMarkers: false,\n            containerTpl: '<div class=\"g2-tooltip\"><table class=\"g2-tooltip-list\"></table></div>',\n            itemTpl: '<tr data-index=\"{index}\"><td style=\"padding:5px;background-color:#852323; color:#fff;\">{name}</td><td style=\"padding:5px;background-color:#fff;color:#000;\">{value}</td></tr>',\n            domStyles: {\n              'g2-tooltip': {\n                borderRadius: '2px',\n                backgroundColor: '#DDDDDD',\n                padding: 0,\n                border: '1px solid #333'\n              }\n            }\n          });\n          const ds = new DataSet();\n          // draw the map\n          const dv = ds.createView('back')\n            .source(props.geoData, {\n              type: 'GeoJSON'\n            })\n            .transform({\n              type: 'geo.projection',\n              projection: 'geoMercator',\n              as: ['x', 'y', 'centroidX', 'centroidY']\n            });\n      \n          const bgView = chart.createView();\n          bgView.data(dv.rows);\n          bgView.tooltip(false);\n          bgView.polygon()\n            .position('x*y')\n            .style({\n              fill: '#DDDDDD',\n              stroke: '#b1b1b1',\n              lineWidth: 0.5,\n              fillOpacity: 0.85\n      \n            });\n      \n          const userData = ds.createView().source(props.countryData);\n          userData.transform({\n            type: 'map',\n            callback: obj => {\n              const projectedCoord = dv.geoProjectPosition([obj.longitude * 1, obj.latitude * 1], 'geoMercator');\n              obj.x = projectedCoord[0];\n              obj.y = projectedCoord[1];\n              obj.deaths = obj.totalDeaths * 1; \n              obj.magnitude = obj.totalCases * 1;\n              return obj;\n            }\n          });\n      \n          const pointView = chart.createView();\n          pointView.data(userData.rows);\n          pointView.point()\n            .position('x*y')\n            .size('magnitude', [2, 30])\n            .shape('circle')\n            .color('#FF2F29')\n            .tooltip('country*active*recovered*critical*totalDeaths*totalCases')\n            .style({\n              fillOpacity: 0.45,\n            })\n            .state({\n              active: {\n                style: {\n                  lineWidth: 1,\n                  stroke: '#FF2F29'\n                }\n              }\n            });\n          pointView.interaction('element-active');\n          chart.render();\n          render = false\n    }\n\n        return(\n            <></>\n        );\n}\n\nexport default DisplayMapChart;","import React from 'react';\nimport  DisplayMapChart  from '../chart/mapChart.component'\nimport { CardHeader, CardBody, Card } from \"shards-react\";\n\nconst CountryStats = (props) => {\n  \n  return (\n\n    <>\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0 text-center text-uppercase\">{props.title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          {props.geoData.type && props.countryData.length > 0  && ( \n             <DisplayMapChart countryData={props.countryData} geoData={props.geoData}/>\n          )}\n          <div id=\"container\" />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\nexport default CountryStats;\n\n\n","\nconst GeoLocation = (countryName) => {\n\n    const locationData = [\n        { name: \"AF\", latitude: \"33.93911\", longitude: \"67.709953\", country: \"Afghanistan\" },\n        { name: \"AL\", latitude: \"41.153332\", longitude: \"20.168331\", country: \"Albania\" },\n        { name: \"DZ\", latitude: \"28.033886\", longitude: \"1.659626\", country: \"Algeria\" },\n        { name: \"AS\", latitude: \"-14.270972\", longitude: \"-170.132217\", country: \"American Samoa\" },\n        { name: \"AD\", latitude: \"42.546245\", longitude: \"1.601554\", country: \"Andorra\" },\n        { name: \"AO\", latitude: \"-11.202692\", longitude: \"17.873887\", country: \"Angola\" },\n        { name: \"AI\", latitude: \"18.220554\", longitude: \"-63.068615\", country: \"Anguilla\" },\n        { name: \"AQ\", latitude: \"-75.250973\", longitude: \"-0.071389\", country: \"Antarctica\" },\n        { name: \"AG\", latitude: \"17.060816\", longitude: \"-61.796428\", country: \"Antigua and Barbuda\" },\n        { name: \"AR\", latitude: \"-38.416097\", longitude: \"-63.616672\", country: \"Argentina\" },\n        { name: \"AM\", latitude: \"40.069099\", longitude: \"45.038189\", country: \"Armenia\" },\n         { name: \"AW\", latitude: \"12.52111\", longitude: \"-69.968338\", country: \"Aruba\" }\n        , { name: \"AU\", latitude: \"-25.274398\", longitude: \"133.775136\", country: \"Australia\" }\n        , { name: \"AT\", latitude: \"47.516231\", longitude: \"14.550072\", country: \"Austria\" }\n        , { name: \"AZ\", latitude: \"40.143105\", longitude: \"47.576927\", country: \"Azerbaijan\" }\n        , { name: \"BS\", latitude: \"25.03428\", longitude: \"-77.39628\", country: \"Bahamas\" }\n        , { name: \"BH\", latitude: \"25.930414\", longitude: \"50.637772\", country: \"Bahrain\" }\n        , { name: \"BD\", latitude: \"23.684994\", longitude: \"90.356331\", country: \"Bangladesh\" }\n        , { name: \"BB\", latitude: \"13.193887\", longitude: \"-59.543198\", country: \"Barbados\" }\n        , { name: \"BY\", latitude: \"53.709807\", longitude: \"27.953389\", country: \"Belarus\" }\n        , { name: \"BE\", latitude: \"50.503887\", longitude: \"4.469936\", country: \"Belgium\" }\n        , { name: \"BZ\", latitude: \"17.189877\", longitude: \"-88.49765\", country: \"Belize\" }\n        , { name: \"BJ\", latitude: \"9.30769\", longitude: \"2.315834\", country: \"Benin\" }\n        , { name: \"BM\", latitude: \"32.321384\", longitude: \"-64.75737\", country: \"Bermuda\" }\n        , { name: \"BT\", latitude: \"27.514162\", longitude: \"90.433601\", country: \"Bhutan\" }\n        , { name: \"BO\", latitude: \"-16.290154\", longitude: \"-63.588653\", country: \"Bolivia\" }\n        , { name: \"BA\", latitude: \"43.915886\", longitude: \"17.679076\", country: \"Bosnia and Herzegovina\" }\n        , { name: \"BW\", latitude: \"-22.328474\", longitude: \"24.684866\", country: \"Botswana\" }\n        , { name: \"BV\", latitude: \"-54.423199\", longitude: \"3.413194\", country: \"Bouvet Island\" }\n        , { name: \"BR\", latitude: \"-14.235004\", longitude: \"-51.92528\", country: \"Brazil\" }\n        , { name: \"IO\", latitude: \"-6.343194\", longitude: \"71.876519\", country: \"BritishIndianOceanTerritory\" }\n        , { name: \"BN\", latitude: \"4.535277\", longitude: \"114.727669\", country: \"Brunei\" }\n        , { name: \"BG\", latitude: \"42.733883\", longitude: \"25.48583\", country: \"Bulgaria\" }\n        , { name: \"BF\", latitude: \"12.238333\", longitude: \"-1.561593\", country: \"Burkina-Faso\" }\n        , { name: \"BI\", latitude: \"-3.373056\", longitude: \"29.918886\", country: \"Burundi\" }\n        , { name: \"KH\", latitude: \"12.565679\", longitude: \"104.990963\", country: \"Cambodia\" }\n        , { name: \"CM\", latitude: \"7.369722\", longitude: \"12.354722\", country: \"Cameroon\" }\n        , { name: \"CA\", latitude: \"56.130366\", longitude: \"-106.346771\", country: \"Canada\" }\n        , { name: \"CV\", latitude: \"16.002082\", longitude: \"-24.013197\", country: \"Cape-Verde\" }\n        , { name: \"KY\", latitude: \"19.513469\", longitude: \"-80.566956\", country: \"CaymanIslands\" }\n        , { name: \"CF\", latitude: \"6.611111\", longitude: \"20.939444\", country: \"CentralAfricanRepublic\" }\n        , { name: \"TD\", latitude: \"15.454166\", longitude: \"18.732207\", country: \"Chad\" }\n        , { name: \"CL\", latitude: \"-35.675147\", longitude: \"\t-71.542969\", country: \"Chile\" }\n        , { name: \"CN\", latitude: \"35.86166\", longitude: \"104.195397\t\", country: \"China\" }\n        , { name: \"CX\", latitude: \"-10.447525\", longitude: \"105.690449\", country: \"ChristmasIsland\" }\n        , { name: \"CC\", latitude: \"-12.164165\", longitude: \"96.870956\", country: \"Cocos [Keeling] Islands\" }\n        , { name: \"CO\", latitude: \"4.570868\", longitude: \"-74.297333\t\", country: \"Colombia\" }\n        , { name: \"KM\", latitude: \"-11.875001\", longitude: \"43.872219\", country: \"Comoros\" }\n        , { name: \"CG\", latitude: \"-0.228021\", longitude: \"15.827659\", country: \"Congo\" }\n        , { name: \"CK\", latitude: \"-21.236736\", longitude: \"-159.777671\", country: \"Cook-Islands\" }\n        , { name: \"CR\", latitude: \"9.748917\", longitude: \"-83.753428\", country: \"Costa-Rica\" }\n        , { name: \"CI\", latitude: \"7.539989\", longitude: \"-5.54708\", country: \"Ivory-Coast\" }\n        , { name: \"HR\", latitude: \"45.1\",     longitude: \"15.2\", country: \"Croatia\" }\n        , { name: \"CU\", latitude: \"21.521757\", longitude: \"-77.781167\", country: \"Cuba\" }\n        , { name: \"CY\", latitude: \"35.126413\", longitude: \"33.429859\", country: \"Cyprus\" }\n        , { name: \"CZ\", latitude: \"49.817492\", longitude: \"15.472962\", country: \"Czech Republic\" }\n        , { name: \"DK\", latitude: \"56.26392\", longitude: \"9.501785\", country: \"Denmark\" }\n        , { name: \"DJ\", latitude: \"11.825138\", longitude: \"42.590275\", country: \"Djibouti\" }\n        , { name: \"DM\", latitude: \"15.414999\", longitude: \"-61.370976\", country: \"Dominica\" }\n        , { name: \"DO\", latitude: \"18.735693\", longitude: \"-70.162651\", country: \"Dominican Republic\" }\n        , { name: \"EC\", latitude: \"-1.831239\", longitude: \"-78.183406\", country: \"Ecuador\" }\n        , { name: \"EG\", latitude: \"26.820553\", longitude: \"30.802498\", country: \"Egypt\" }\n        , { name: \"SV\", latitude: \"13.794185\", longitude: \"-88.89653\", country: \"ElSalvador\" }\n        , { name: \"GQ\", latitude: \"1.650801\", longitude: \"10.267895\", country: \"Equatorial Guinea\" }\n        , { name: \"ER\", latitude: \"15.179384\", longitude: \"39.782334\", country: \"Eritrea\" }\n        , { name: \"EE\", latitude: \"58.595272\", longitude: \"25.013607\", country: \"Estonia\" }\n        , { name: \"ET\", latitude: \"9.145\",      longitude: \"40.489673\", country: \"Ethiopia\" }\n        , { name: \"FK\", latitude: \"-51.796253\", longitude: \"-59.523613\", country: \"\tFalkland Islands [IslasMalvinas]\" }\n        , { name: \"FO\", latitude: \"61.892635\",  longitude: \"-6.911806\", country: \"Faroe Islands\" }\n        , { name: \"FJ\", latitude: \"-16.578193\", longitude: \"179.414413\", country: \"Fiji\" }\n        , { name: \"FI\", latitude: \"61.92411\",   longitude: \"25.748151\", country: \"Finland\" }\n        , { name: \"FR\", latitude: \"46.227638\", longitude: \"2.213749\", country: \"France\" }\n        , { name: \"GF\", latitude: \"3.933889\",    longitude: \"-53.125782\", country: \"French Guiana\" }\n        , { name: \"PF\", latitude: \"-17.679742\", longitude: \"-149.406843\", country: \"French Polynesia\" }\n        , { name: \"TF\", latitude: \"-49.280366\", longitude: \"69.348557\", country: \"FrenchSouthernTerritories\" }\n        , { name: \"GA\", latitude: \"-0.803689\", longitude: \"11.609444\", country: \"Gabon\" }\n        , { name: \"GM\", latitude: \"13.443182\", longitude: \"-15.310139\", country: \"Gambia\" }\n        , { name: \"GZ\", latitude: \"31.354676\", longitude: \"34.308825\", country: \"GazaStrip\" }\n        , { name: \"GE\", latitude: \"42.315407\", longitude: \"43.356892\", country: \"Georgia\" }\n        , { name: \"DE\", latitude: \"51.165691\", longitude: \"10.451526\", country: \"Germany\" }\n        , { name: \"GH\", latitude: \"7.946527\", longitude: \"-1.023194\", country: \"Ghana\" }\n        , { name: \"GI\", latitude: \"36.137741\", longitude: \"-5.345374\", country: \"Gibraltar\" }\n        , { name: \"GR\", latitude: \"39.074208\", longitude: \"21.824312\", country: \"Greece\" }\n        , { name: \"GL\", latitude: \"71.706936\", longitude: \"-42.604303\", country: \"Greenland\" }\n        , { name: \"GD\", latitude: \"12.262776\", longitude: \"-61.604171\", country: \"Grenada\" }\n        , { name: \"GP\", latitude: \"16.995971\", longitude: \"-62.067641\", country: \"Guadeloupe\" }\n        , { name: \"GU\", latitude: \"13.444304\", longitude: \"144.793731\", country: \"Guam\" }\n        , { name: \"GT\", latitude: \"15.783471\", longitude: \"-90.230759\", country: \"Guatemala\" }\n        , { name: \"GG\", latitude: \"49.465691\", longitude: \"-2.585278\", country: \"Guernsey\" }\n        , { name: \"GN\", latitude: \"9.945587\", longitude: \"-9.696645\", country: \"Guinea\" }\n        , { name: \"GW\", latitude: \"11.803749\", longitude: \"-15.180413\", country: \"Guinea-Bissau\" }\n        , { name: \"GY\", latitude: \"4.860416\", longitude: \"-58.93018\", country: \"Guyana\" }\n        , { name: \"HT\", latitude: \"18.971187\", longitude: \"-72.285215\", country: \"Haiti\" }\n        , { name: \"HM\", latitude: \"-53.08181\", longitude: \"73.504158\", country: \"HeardIslandandMcDonaldIslands\" }\n        , { name: \"HN\", latitude: \"15.199999\", longitude: \"-86.241905\", country: \"Honduras\" }\n        , { name: \"HK\", latitude: \"22.396428\", longitude: \"114.109497\", country: \"HongKong\" }\n        , { name: \"HU\", latitude: \"47.162494\", longitude: \"19.503304\", country: \"Hungary\" }\n        , { name: \"IS\", latitude: \"64.963051\", longitude: \"-19.020835\", country: \"Iceland\" }\n        , { name: \"IN\", latitude: \"20.593684\", longitude: \"78.96288\", country: \"India\" }\n        , { name: \"ID\", latitude: \"-0.789275\", longitude: \"113.921327\", country: \"Indonesia\" }\n        , { name: \"IR\", latitude: \"32.427908\", longitude: \"53.688046\", country: \"Iran\" }\n        , { name: \"IQ\", latitude: \"33.223191\", longitude: \"43.679291\", country: \"Iraq\" }\n        , { name: \"IE\", latitude: \"53.41291\", longitude: \"-8.24389\", country: \"Ireland\" }\n        , { name: \"IM\", latitude: \"54.236107\", longitude: \"-4.548056\", country: \"Isle-of-Man\" }\n        , { name: \"IL\", latitude: \"31.046051\", longitude: \"34.851612\", country: \"Israel\" }\n        , { name: \"IT\", latitude: \"41.87194\", longitude: \"12.56738\", country: \"Italy\" }\n        , { name: \"JM\", latitude: \"18.109581\", longitude: \"-77.297508\", country: \"Jamaica\" }\n        , { name: \"JP\", latitude: \"36.204824\", longitude: \"138.252924\", country: \"Japan\" }\n        , { name: \"JE\", latitude: \"49.214439\", longitude: \"-2.13125\", country: \"Jersey\" }\n        , { name: \"JO\", latitude: \"30.585164\", longitude: \"36.238414\", country: \"Jordan\" }\n        , { name: \"KZ\", latitude: \"48.019573\", longitude: \"66.923684\", country: \"Kazakhstan\" }\n        , { name: \"KE\", latitude: \"-0.023559\", longitude: \"37.906193\", country: \"Kenya\" }\n        , { name: \"KI\", latitude: \"-3.370417\", longitude: \"-168.734039\", country: \"Kiribati\" }\n        , { name: \"KW\", latitude: \"29.31166\", longitude: \"47.481766\", country: \"Kuwait\" }\n        , { name: \"KG\", latitude: \"41.20438\", longitude: \"74.766098\", country: \"Kyrgyzstan\" }\n        , { name: \"LA\", latitude: \"19.85627\", longitude: \"102.495496\", country: \"Laos\" }\n        , { name: \"LV\", latitude: \"56.879635\", longitude: \"24.603189\", country: \"Latvia\" }\n        , { name: \"LB\", latitude: \"33.854721\", longitude: \"35.862285\", country: \"Lebanon\" }\n        , { name: \"LS\", latitude: \"-29.609988\", longitude: \"28.233608\", country: \"Lesotho\" }\n        , { name: \"LR\", latitude: \"6.428055\", longitude: \"-9.429499\", country: \"Liberia\" }\n        , { name: \"LY\", latitude: \"26.3351\", longitude: \"17.228331\", country: \"Libya\" }\n        , { name: \"LI\", latitude: \"47.166\", longitude: \"9.555373\", country: \"Liechtenstein\" }\n        , { name: \"LT\", latitude: \"55.169438\", longitude: \"23.881275\", country: \"Lithuania\" }\n        , { name: \"LU\", latitude: \"49.815273\", longitude: \"6.129583\", country: \"Luxembourg\" }\n        , { name: \"MO\", latitude: \"22.198745\", longitude: \"113.543873\", country: \"Macau\" }\n        , { name: \"MK\", latitude: \"41.608635\", longitude: \"21.745275\", country: \"Macedonia\" }\n        , { name: \"MG\", latitude: \"-18.766947\", longitude: \"46.869107\", country: \"Madagascar\" }\n        , { name: \"MW\", latitude: \"-13.254308\", longitude: \"34.301525\", country: \"Malawi\" }\n        , { name: \"MY\", latitude: \"4.210484\", longitude: \"101.975766\t\", country: \"Malaysia\" }\n        , { name: \"MV\", latitude: \"3.202778\", longitude: \"73.22068\", country: \"Maldives\" }\n        , { name: \"ML\", latitude: \"17.570692\", longitude: \"-3.996166\t\", country: \"Mali\" }\n        , { name: \"MT\", latitude: \"35.937496\", longitude: \"14.375416\t\", country: \"Malta\" }\n        , { name: \"MH\", latitude: \"7.131474\", longitude: \"171.184478\t\", country: \"MarshallIslands\" }\n        , { name: \"MQ\", latitude: \"14.641528\", longitude: \"-61.024174\", country: \"Martinique\" }\n        , { name: \"MR\", latitude: \"21.00789\", longitude: \"-10.940835\t\", country: \"Mauritania\" }\n        , { name: \"MU\", latitude: \"-20.348404\", longitude: \"57.552152\", country: \"Mauritius\" }\n        , { name: \"MX\", latitude: \"23.634501\", longitude: \"-102.552784\", country: \"Mexico\" }\n        , { name: \"FM\", latitude: \"7.425554\", longitude: \"150.550812\", country: \"Micronesia\" }\n        , { name: \"MD\", latitude: \"47.411631\", longitude: \"28.369885\", country: \"Moldova\" }\n        , { name: \"MC\", latitude: \"43.750298\", longitude: \"7.412841\", country: \"Monaco\" }\n        , { name: \"MN\", latitude: \"46.862496\", longitude: \"103.846656\", country: \"Mongolia\" }\n        , { name: \"ME\", latitude: \"42.708678\", longitude: \"19.37439\", country: \"Montenegro\" }\n        , { name: \"MS\", latitude: \"16.742498\", longitude: \"-62.187366\", country: \"Montserrat\" }\n        , { name: \"MA\", latitude: \"31.791702\", longitude: \"-7.09262\", country: \"Morocco\" }\n        , { name: \"MZ\", latitude: \"-18.665695\", longitude: \"35.529562\", country: \"Mozambique\" }\n        , { name: \"MM\", latitude: \"21.913965\", longitude: \"95.956223\t\", country: \"Myanmar\" }\n        , { name: \"NA\", latitude: \"-22.95764\", longitude: \"18.49041\t\", country: \"Namibia\" }\n        , { name: \"NR\", latitude: \"-0.522778\", longitude: \"166.931503\", country: \"Nauru\" }\n        , { name: \"NP\", latitude: \"28.394857\", longitude: \"84.124008\", country: \"Nepal\" }\n        , { name: \"NL\", latitude: \"52.132633\", longitude: \"5.291266\", country: \"Netherlands\" }\n        , { name: \"AN\", latitude: \"12.226079\", longitude: \"-69.060087\", country: \"Netherlands Antilles\" }\n        , { name: \"NC\", latitude: \"-20.904305\", longitude: \"165.618042\", country: \"New-Caledonia\" }\n        , { name: \"NZ\", latitude: \"-40.900557\", longitude: \"174.885971\", country: \"NewZealand\" }\n        , { name: \"NI\", latitude: \"12.865416\", longitude: \"-85.207229\", country: \"Nicaragua\" }\n        , { name: \"NE\", latitude: \"17.607789\", longitude: \"8.081666\", country: \"Niger\" }\n        , { name: \"NG\", latitude: \"9.081999\", longitude: \"8.675277\", country: \"Nigeria\" }\n        , { name: \"NU\", latitude: \"-19.054445\", longitude: \"-169.867233\", country: \"Niue\" }\n        , { name: \"NF\", latitude: \"-29.040835\", longitude: \"167.954712\", country: \"\tNorfolkIsland\" }\n        , { name: \"KP\", latitude: \"40.339852\", longitude: \"127.510093\", country: \"NorthKorea\" }\n        , { name: \"MP\", latitude: \"17.33083\", longitude: \"145.38469\", country: \"NorthernMarianaIslands\" }\n        , { name: \"NO\", latitude: \"60.472024\", longitude: \"8.468946\", country: \"Norway\" }\n        , { name: \"OM\", latitude: \"21.512583\", longitude: \"55.923255\", country: \"Oman\" }\n        , { name: \"PK\", latitude: \"30.375321\", longitude: \"69.345116\", country: \"Pakistan\" }\n        , { name: \"PS\", latitude: \"31.952162\", longitude: \"35.233154\", country: \"Palestinian Territories\" }\n        , { name: \"PA\", latitude: \"8.537981\", longitude: \"-80.782127\", country: \"Panama\" }\n        , { name: \"PG\", latitude: \"-6.314993\", longitude: \"143.95555\", country: \"Papua-New-Guinea\" }\n        , { name: \"PY\", latitude: \"-23.442503\", longitude: \"-58.443832\", country: \"Paraguay\" }\n        , { name: \"PE\", latitude: \"-9.189967\", longitude: \"-75.015152\", country: \"Peru\" }\n        , { name: \"PH\", latitude: \"12.879721\", longitude: \"121.774017\", country: \"Philippines\" }\n        , { name: \"PN\", latitude: \"-24.703615\", longitude: \"-127.439308\", country: \"Pitcairn Islands\" }\n        , { name: \"PL\", latitude: \"51.919438\", longitude: \"19.145136\", country: \"Poland\" }\n        , { name: \"PT\", latitude: \"39.399872\", longitude: \"-8.224454\", country: \"Portugal\" }\n        , { name: \"PR\", latitude: \"18.220833\", longitude: \"-66.590149\", country: \"Puerto-Rico\" }\n        , { name: \"QA\", latitude: \"25.354826\", longitude: \"51.183884\", country: \"Qatar\" }\n        , { name: \"RE\", latitude: \"-21.115141\", longitude: \"55.536384\", country: \"Réunion\" }\n        , { name: \"RO\", latitude: \"45.943161\", longitude: \"24.96676\", country: \"Romania\" }\n        , { name: \"RU\", latitude: \"61.52401\", longitude: \"105.318756\", country: \"Russia\" }\n        , { name: \"RW\", latitude: \"-1.940278\", longitude: \"29.873888\", country: \"Rwanda\" }\n        , { name: \"SH\", latitude: \"-24.143474\", longitude: \"-10.030696\", country: \"\tSaint-Helena\" }\n        , { name: \"KN\", latitude: \"17.357822\", longitude: \"-62.782998\", country: \"Saint-Kitts-and-Nevis\" }\n        , { name: \"LC\", latitude: \"13.909444\", longitude: \"-60.978893\", country: \"Saint-Lucia\" }\n        , { name: \"PM\", latitude: \"46.941936\", longitude: \"-56.27111\", country: \"Saint-Pierre-and-Miquelon\" }\n        , { name: \"SM\", latitude: \"43.94236\", longitude: \"12.457777\", country: \"San-Marino\" }\n        , { name: \"SA\", latitude: \"23.885942\", longitude: \"45.079162\", country: \"Saudi-Arabia\" }\n        , { name: \"SN\", latitude: \"14.497401\", longitude: \"-14.452362\", country: \"Senegal\" }\n        , { name: \"RS\", latitude: \"44.016521\", longitude: \"21.005859\", country: \"Serbia\" }\n        , { name: \"SC\", latitude: \"-4.679574\", longitude: \"55.491977\", country: \"Seychelles\" }\n        , { name: \"SL\", latitude: \"8.460555\", longitude: \"-11.779889\", country: \"Sierra-Leone\" }\n        , { name: \"SG\", latitude: \"1.352083\", longitude: \"103.819836\", country: \"Singapore\" }\n        , { name: \"SK\", latitude: \"48.669026\", longitude: \"19.699024\", country: \"Slovakia\" }\n        , { name: \"SI\", latitude: \"46.151241\", longitude: \"14.995463\", country: \"Slovenia\" }\n        , { name: \"SB\", latitude: \"-9.64571\", longitude: \"160.156194\", country: \"SolomonIslands\" }\n        , { name: \"SO\", latitude: \"5.152149\", longitude: \"46.199616\t\", country: \"Somalia\" }\n        , { name: \"GS\", latitude: \"-54.429579\", longitude: \"-36.587909\", country: \"\tSouth Georgia and the South Sandwich Islands\" }\n        , { name: \"KR\", latitude: \"35.907757\", longitude: \"127.766922\", country: \"S.-Korea\" }\n        , { name: \"ES\", latitude: \"40.463667\", longitude: \"-3.74922\", country: \"Spain\" }\n        , { name: \"LK\", latitude: \"7.873054\", longitude: \"80.771797\", country: \"SriLanka\" }\n        , { name: \"SD\", latitude: \"12.862807\", longitude: \"30.217636\", country: \"Sudan\" }\n        , { name: \"SR\", latitude: \"3.919305\", longitude: \"-56.027783\", country: \"Suriname\" }\n        , { name: \"SJ\", latitude: \"77.553604\", longitude: \"23.670272\", country: \"SvalbardandJanMayen\" }\n        , { name: \"SZ\", latitude: \"-26.522503\", longitude: \"31.465866\", country: \"Swaziland\" }\n        , { name: \"SE\", latitude: \"60.128161\", longitude: \"18.643501\", country: \"Sweden\" }\n        , { name: \"CH\", latitude: \"46.818188\", longitude: \"8.227512\", country: \"Switzerland\" }\n        , { name: \"SY\", latitude: \"34.802075\", longitude: \"38.996815\", country: \"Syria\" }\n        , { name: \"TJ\", latitude: \"38.861034\", longitude: \"71.276093\", country: \"Tajikistan\" }\n        , { name: \"TH\", latitude: \"15.870032\", longitude: \"100.992541\", country: \"Thailand\" }\n        , { name: \"TL\", latitude: \"-8.874217\", longitude: \"125.727539\", country: \"Timor-Leste\" }\n        , { name: \"TG\", latitude: \"8.619543\", longitude: \"0.824782\", country: \"Togo\" }\n        , { name: \"TK\", latitude: \"-8.967363\", longitude: \"-171.855881\", country: \"Tokelau\" }\n        , { name: \"TM\", latitude: \"38.969719\", longitude: \"59.556278\", country: \"Turkmenistan\" }\n        , { name: \"TC\", latitude: \"21.694025\", longitude: \"-71.797928\", country: \"Turks-and-CaicosIslands\" }\n        , { name: \"AE\", latitude: \"23.424076\", longitude: \"53.847818\", country: \"UAE\" }\n        , { name: \"GB\", latitude: \"55.378051\", longitude: \"-3.435973\", country: \"UK\" }\n        , { name: \"EH\", latitude: \"24.215527\", longitude: \"-12.885834\", country: \"Western-Sahara\" }\n        , { name: \"TN\", latitude: \"33.886917\", longitude: \"9.537499\", country: \"Tunisia\" }\n        , { name: \"TO\", latitude: \"-21.178986\", longitude: \"-175.198242\", country: \"Tonga\" }\n        , { name: \"TR\", latitude: \"38.963745\", longitude: \"35.243322\", country: \"Turkey\" }\n        , { name: \"TT\", latitude: \"10.691803\", longitude: \"-61.222503\", country: \"Trinidad-and-Tobago\" }\n        , { name: \"TV\", latitude: \"-7.109535\", longitude: \"177.64933\", country: \"Tuvalu\" }\n        , { name: \"TW\", latitude: \"23.69781\", longitude: \"120.960515\", country: \"Taiwan\" }\n        , { name: \"TZ\", latitude: \"-6.369028\", longitude: \"34.888822\", country: \"Tanzania\" }\n        , { name: \"UA\", latitude: \"48.379433\", longitude: \"31.16558\", country: \"Ukraine\" }\n        , { name: \"UG\", latitude: \"1.373333\", longitude: \"32.290275\", country: \"Uganda\" }\n        , { name: \"US\", latitude: \"37.09024\", longitude: \"-95.712891\", country: \"USA\" }\n        , { name: \"UY\", latitude: \"-32.522779\", longitude: \"-55.765835\", country: \"Uruguay\" }\n        , { name: \"UZ\", latitude: \"41.377491\", longitude: \"64.585262\", country: \"Uzbekistan\" }\n        , { name: \"VA\", latitude: \"41.902916\", longitude: \"\t12.453389\", country: \"Vatican-City\" }\n        , { name: \"VC\", latitude: \"12.984305\", longitude: \"-61.287228\", country: \"Saint Vincent and theGrenadines\" }\n        , { name: \"VE\", latitude: \"6.42375\", longitude: \"-66.58973\", country: \"Venezuela\" }\n        , { name: \"VG\", latitude: \"18.420695\", longitude: \"-64.639968\", country: \"BritishVirginIslands\" }\n        , { name: \"VI\", latitude: \"18.335765\", longitude: \"-64.896335\", country: \"U.S.-Virgin-Islands\" }\n        , { name: \"VN\", latitude: \"14.058324\", longitude: \"108.277199\", country: \"Vietnam\" }\n        , { name: \"VU\", latitude: \"-15.376706\", longitude: \"166.959158\", country: \"Vanuatu\" }\n        , { name: \"WF\", latitude: \"-13.768752\", longitude: \"-177.156097\t\", country:\"Wallis-and-Futuna\" }\n        , { name: \"WS\", latitude: \"-13.759029\", longitude: \"-172.104629\t\", country: \"Samoa\" }\n        , { name: \"XK\", latitude: \"42.602636\", longitude: \"20.902977\", country: \"Kosovo\" }\n        , { name: \"YE\", latitude: \"15.552727\", longitude: \"48.516388\", country: \"Yemen\" }\n        , { name: \"YT\", latitude: \"-12.8275\", longitude: \"45.166244\", country: \"Mayotte\" }\n        , { name: \"ZA\", latitude: \"-30.559482\", longitude: \"22.937506\", country: \"South-Africa\" }\n        , { name: \"ZM\", latitude: \"-13.133897\", longitude: \"27.849332\", country: \"Zambia\" }\n        , { name: \"ZW\", latitude: \"-19.015438\", longitude: \"29.154857\", country: \"Zimbabwe\" }\n    ]\n\n    const countryData  = locationData.filter( data =>  countryName === data.country)\n\n    return countryData;\n}\nexport default GeoLocation;\n\n\n\n","import React from 'react';\nimport { Chart } from '@antv/g2';\n\n\nconst DisplayPieChart = (props) => {\n\n    if (props.chartData && props.chartData.length > 0) {\n        const chart = new Chart({\n            container: 'containerPieChart',\n            autoFit: true,\n            height: 500,\n        });\n\n        chart.data(props.chartData);\n        chart.scale('percent', {\n            formatter: (val) => {\n                val = val * 100 + '%';\n                return val;\n            },\n        });\n        chart.coordinate('theta', {\n            radius: 0.75,\n            innerRadius: 0.6,\n        });\n        chart.tooltip({\n            showTitle: false,\n            showMarkers: false,\n            itemTpl: '<li class=\"g2-tooltip-list-item\"><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value}</li>',\n        });\n        chart.annotation()\n            .text({\n                position: ['50%', '50%'],\n                content: \"Total Confirmed Cases\",\n                style: {\n                    fontSize: 14,\n                    fill: '#8c8c8c',\n                    textAlign: 'center',\n                },\n                offsetY: -20,\n            })\n            .text({\n                position: ['50%', '50%'],\n                content: props.innerChartTitle,\n                style: {\n                    fontSize: 20,\n                    fill: '#8c8c8c',\n                    textAlign: 'center',\n                },\n                offsetX: -10,\n                offsetY: 20,\n            });\n        chart.interval()\n            .adjust('stack')\n            .position('percent')\n            .color('item')\n            .tooltip('item*percent', (item, percent) => {\n                percent = percent * 100 + '%';\n                return {\n                    name: item,\n                    value: percent,\n                };\n            });\n        \n        chart.interaction('element-active');\n        chart.render(true);\n    }\n        return (\n            <></>\n        );\n    }\nexport default DisplayPieChart;","import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, FormGroup } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false,\n    renderKey: 0,\n    previousSearch: \"\",\n    filterResult: []\n}\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState);\n\n\n    const displayChart = () => {\n\n        const countryData = [];\n        let noSearchRecordRender = true;\n\n        if (state.previousSearch !== state.searchInput) {\n\n            const percentageActive = ((state.filterResult[0].active / state.filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((state.filterResult[0].critical / state.filterResult[0].totalCases)).toFixed(2)) == 0 ? 0.01 : (((state.filterResult[0].critical / state.filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((state.filterResult[0].recovered / state.filterResult[0].totalCases))).toFixed(2) == 0 ? 0.01 : (((state.filterResult[0].recovered / state.filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((state.filterResult[0].totalDeaths / state.filterResult[0].totalCases))).toFixed(2) == 0 ? 0.01 : (((state.filterResult[0].totalDeaths / state.filterResult[0].totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n            noSearchRecordRender = false;\n            setstate({ searchInput: state.searchInput, chartData: countryData, chartInnerTitle: state.filterResult[0].totalCases, render: true, previousSearch: state.searchInput })\n        }\n        if (noSearchRecordRender && state.previousSearch !== state.searchInput) {\n            setstate({ ...state, render: true })\n        }\n    }\n\n    const handleChange = (filter) => {\n        console.log(filter);\n        if (Array.isArray(filter) && filter.length > 0) {\n            setstate({ searchInput: filter[0].country, chartData: [], filterResult: filter })\n        }\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom m-2\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                <FormGroup>\n                    <Typeahead\n                        id=\"filtering-example\"\n                        caseSensitive={true}\n                        labelKey={(option) => `${option.country}`}\n                        onChange={handleChange}\n                        options={props.countryCaseData}\n                        placeholder=\"Enter Country Name...\"\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                </FormGroup>\n                <div id=\"containerPieChart\" key={state.searchInput} />\n\n                {state.chartData && state.chartData.length > 0 && (\n                    <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData} />\n                )}\n\n                {state.chartData && state.chartData.length === 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )}\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\n\nclass TotalStats extends React.Component {\n  \n  render() {\n\n    const { variation, label, value } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\", variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    \n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            \n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default TotalStats;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionForTotalStat from '../action/totalstats.action';\nimport * as actionForCountryStat from '../action/countryStats.action';\nimport { Row, Container, Col } from \"shards-react\";\nimport PageHeader from '../component/common/pageheader.component';\nimport CountryStat from '../component/statistics/countryStats.component';\nimport GeoLocation from '../utils/geoCountryData';\nimport CountryCaseStats from '../component/statistics/countryCaseStats.component';\nimport TotalStats from '../component/statistics/totalStats.component';\n\n\nconst DefaultLayout = () => {\n\n    const countryData = [];\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actionForTotalStat.fetch());\n        dispatch(actionForCountryStat.fetch());\n        dispatch(actionForCountryStat.fetchDvData());\n    }, [dispatch])\n\n    const { allCountryData, geoData, totalFigure } = useSelector(state => ({\n\n        allCountryData: state.CountryStats.allCountryData,\n        geoData: state.CountryStats.geoData,\n        totalFigure: state.TotalStats.totalFigure\n\n    }));\n    if (allCountryData && allCountryData.response) {\n\n       allCountryData.response.map(data => {\n            const geolocation = GeoLocation(data.country);\n            if (geolocation.length > 0) {\n                countryData.push({\n                    latitude: geolocation[0].latitude,\n                    longitude: geolocation[0].longitude,\n                    country: data.country,\n                    recovered: data.cases.recovered,\n                    critical: data.cases.critical,\n                    totalDeaths: data.deaths.total,\n                    totalCases: data.cases.total,\n                    active: data.cases.active\n                })\n            }\n        })\n    }\n\n    return (\n        <>\n            <Container fluid className=\"main-content-container px-4 container-fluid\">\n\n                <Row noGutters className=\"page-header py-4\">\n                    <PageHeader title={`Covid-19 Quick Stats as at (${totalFigure.statistic_taken_at})`} subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n                </Row>\n                <Row>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-one'}\n                            variation=\"1\"\n                            label=\"Total Cases\"\n                            value={totalFigure.total_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-two'}\n                            variation=\"1\"\n                            label=\"Total Deaths\"\n                            value={totalFigure.total_deaths}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-three'}\n                            variation=\"1\"\n                            label=\"Total Recovered\"\n                            value={totalFigure.total_recovered}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Cases\"\n                            value={totalFigure.new_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Deaths\"\n                            value={totalFigure.new_deaths}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <CountryStat title=\"Quick Stat by Country\" countryData={countryData} geoData={geoData} />\n                    </Col >\n                    <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                        <CountryCaseStats title=\"Covid-19 Case Breakdown By Country\" countryCaseData={countryData} />\n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    );\n}\nexport default DefaultLayout;","import React from 'react';\nimport { Provider } from 'react-redux'\nimport {store} from './action/store'\nimport DefaultLayout from \"./layout/defaultLayout\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <DefaultLayout />\n      </Provider>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}