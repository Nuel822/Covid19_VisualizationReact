{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, FormGroup } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nconst initialState = {\n  searchInput: [],\n  chartData: [],\n  chartInnerTitle: \"\",\n  render: false,\n  renderKey: 0,\n  previousSearch: \"\",\n  filterResult: []\n};\n\nconst CountryCaseStats = props => {\n  const [state, setstate] = useState(initialState);\n\n  const displayChart = filterResult => {\n    const countryData = [];\n    let noSearchRecordRender = true;\n\n    if (state.previousSearch !== filterResult[0].country) {\n      const percentageActive = (filterResult[0].active / filterResult[0].totalCases).toFixed(2);\n      const percentageCritical = (filterResult[0].critical / filterResult[0].totalCases).toFixed(2) == 0 ? 0.01 : (filterResult[0].critical / filterResult[0].totalCases).toFixed(2);\n      const percentageRecovered = (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2) == 0 ? 0.01 : (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2);\n      const percentageDeaths = (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2) == 0 ? 0.01 : (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2);\n      countryData.push({\n        item: \"Active\",\n        count: ~~(percentageActive * 100),\n        percent: parseFloat(percentageActive)\n      });\n      countryData.push({\n        item: \"Critical\",\n        count: ~~(percentageCritical * 100),\n        percent: parseFloat(percentageCritical)\n      });\n      countryData.push({\n        item: \"Recovered\",\n        count: ~~(percentageRecovered * 100),\n        percent: parseFloat(percentageRecovered)\n      });\n      countryData.push({\n        item: \"Deaths\",\n        count: ~~(percentageDeaths * 100),\n        percent: parseFloat(percentageDeaths)\n      });\n      noSearchRecordRender = false; // setstate({ searchInput: state.searchInput, chartData: countryData, chartInnerTitle: filterResult[0].totalCases, render: true, previousSearch: state.searchInput })\n\n      setstate({\n        chartData: countryData,\n        chartInnerTitle: filterResult[0].totalCases,\n        render: true,\n        previousSearch: filterResult[0].country\n      });\n    }\n\n    if (noSearchRecordRender && state.previousSearch !== state.searchInput) {\n      setstate({ ...state,\n        render: true\n      });\n    }\n  };\n\n  const handleChange = filter => {\n    console.log(filter);\n\n    if (Array.isArray(filter) && filter.length > 0) {\n      // setstate({ searchInput: filter[0].country, chartData: [], filterResult: filter })\n      displayChart(filter);\n    }\n  };\n\n  const searchNotFoundStyle = {\n    color: '#FF0000'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"filtering-example\",\n    caseSensitive: true,\n    labelKey: option => `${option.country}`,\n    onChange: handleChange,\n    options: props.countryCaseData,\n    placeholder: \"Enter Country Name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    theme: \"primary\",\n    onClick: displayChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPieChart\",\n    key: state.searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DisplayPieChart, {\n    innerChartTitle: state.chartInnerTitle,\n    chartData: state.chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), state.chartData && state.chartData.length === 0 && state.render && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    style: searchNotFoundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \" No Search Record Found \")));\n};\n\nexport default CountryCaseStats;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx"],"names":["React","useState","Card","CardHeader","CardBody","Button","FormGroup","DisplayPieChart","Typeahead","initialState","searchInput","chartData","chartInnerTitle","render","renderKey","previousSearch","filterResult","CountryCaseStats","props","state","setstate","displayChart","countryData","noSearchRecordRender","country","percentageActive","active","totalCases","toFixed","percentageCritical","critical","percentageRecovered","recovered","percentageDeaths","totalDeaths","push","item","count","percent","parseFloat","handleChange","filter","console","log","Array","isArray","length","searchNotFoundStyle","color","title","option","countryCaseData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, FormGroup } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false,\n    renderKey: 0,\n    previousSearch: \"\",\n    filterResult: []\n}\n\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState);\n\n    const displayChart = (filterResult) => {\n\n        const countryData = [];\n        let noSearchRecordRender = true;\n\n        if (state.previousSearch !== filterResult[0].country) {\n\n            const percentageActive = ((filterResult[0].active / filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2)) == 0 ? 0.01 : (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2) == 0 ? 0.01 : (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2) == 0 ? 0.01 : (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n            noSearchRecordRender = false;\n            // setstate({ searchInput: state.searchInput, chartData: countryData, chartInnerTitle: filterResult[0].totalCases, render: true, previousSearch: state.searchInput })\n            setstate({ chartData: countryData, chartInnerTitle: filterResult[0].totalCases, render: true, previousSearch: filterResult[0].country})\n\n        }\n        if (noSearchRecordRender && state.previousSearch !== state.searchInput) {\n            setstate({ ...state, render: true })\n        }\n    }\n\n    const handleChange = (filter) => {\n        console.log(filter);\n        if (Array.isArray(filter) && filter.length > 0) {\n            // setstate({ searchInput: filter[0].country, chartData: [], filterResult: filter })\n            displayChart(filter)\n        }\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                <FormGroup>\n                    <Typeahead\n                        id=\"filtering-example\"\n                        caseSensitive={true}\n                        labelKey={(option) => `${option.country}`}\n                        onChange={handleChange}\n                        options={props.countryCaseData}\n                        placeholder=\"Enter Country Name...\"\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                </FormGroup>\n                <div id=\"containerPieChart\" key={state.searchInput}>\n                    <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData} />\n                </div>\n\n                {state.chartData && state.chartData.length === 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )}\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n"]},"metadata":{},"sourceType":"module"}