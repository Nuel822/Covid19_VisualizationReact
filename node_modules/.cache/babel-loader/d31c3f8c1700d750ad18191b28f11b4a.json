{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from'react-redux';import*as actionForTotalStat from'../action/totalstats.action';import*as actionForCountryStat from'../action/countryStats.action';import{Row,Container,Col}from\"shards-react\";import PageHeader from'../component/common/pageheader.component';import CountryStat from'../component/statistics/countryStats.component';import GeoLocation from'../utils/geoCountryData';import CountryCaseStats from'../component/statistics/countryCaseStats.component';import TotalStats from'../component/statistics/totalStats.component';var DefaultLayout=function DefaultLayout(){var countryData=[];var dispatch=useDispatch();useEffect(function(){dispatch(actionForTotalStat.fetch());dispatch(actionForCountryStat.fetch());dispatch(actionForCountryStat.fetchDvData());},[dispatch]);var _useSelector=useSelector(function(state){return{allCountryData:state.CountryStats.allCountryData,geoData:state.CountryStats.geoData,totalFigure:state.TotalStats.totalFigure};}),allCountryData=_useSelector.allCountryData,geoData=_useSelector.geoData,totalFigure=_useSelector.totalFigure;if(allCountryData&&allCountryData.response){allCountryData.response.map(function(data){var geolocation=GeoLocation(data.country);if(geolocation.length>0){countryData.push({latitude:geolocation[0].latitude,longitude:geolocation[0].longitude,country:data.country,recovered:data.cases.recovered,critical:data.cases.critical,totalDeaths:data.deaths.total,totalCases:data.cases.total,active:data.cases.active});}});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Container,{fluid:true,className:\"main-content-container px-4 container-fluid\"},/*#__PURE__*/React.createElement(Row,{noGutters:true,className:\"page-header py-4\"},/*#__PURE__*/React.createElement(PageHeader,{title:\"Covid-19 Quick Stats as at (\".concat(totalFigure.statistic_taken_at,\")\"),subtitle:\"Dashboard\",className:\"text-sm-left mb-3\"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"col-lg mb-4\"},/*#__PURE__*/React.createElement(TotalStats,{id:'small-stats-one',variation:\"1\",label:\"Total Cases\",value:totalFigure.total_cases})),/*#__PURE__*/React.createElement(Col,{className:\"col-lg mb-4\"},/*#__PURE__*/React.createElement(TotalStats,{id:'small-stats-two',variation:\"1\",label:\"Total Deaths\",value:totalFigure.total_deaths})),/*#__PURE__*/React.createElement(Col,{className:\"col-lg mb-4\"},/*#__PURE__*/React.createElement(TotalStats,{id:'small-stats-three',variation:\"1\",label:\"Total Recovered\",value:totalFigure.total_recovered})),/*#__PURE__*/React.createElement(Col,{className:\"col-lg mb-4\"},/*#__PURE__*/React.createElement(TotalStats,{id:'small-stats-four',variation:\"1\",label:\"New Cases\",value:totalFigure.new_cases})),/*#__PURE__*/React.createElement(Col,{className:\"col-lg mb-4\"},/*#__PURE__*/React.createElement(TotalStats,{id:'small-stats-four',variation:\"1\",label:\"New Deaths\",value:totalFigure.new_deaths}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:\"8\",md:\"12\",sm:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(CountryStat,{title:\"Quick Stat by Country\",countryData:countryData,geoData:geoData})),/*#__PURE__*/React.createElement(Col,{lg:\"4\",md:\"6\",sm:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(CountryCaseStats,{title:\"Covid-19 Case Breakdown By Country\",countryCaseData:countryData})))));};export default DefaultLayout;","map":{"version":3,"sources":["/Users/bobby/Desktop/Covid19_VisualizationReact/src/layout/defaultLayout.jsx"],"names":["React","useEffect","useDispatch","useSelector","actionForTotalStat","actionForCountryStat","Row","Container","Col","PageHeader","CountryStat","GeoLocation","CountryCaseStats","TotalStats","DefaultLayout","countryData","dispatch","fetch","fetchDvData","state","allCountryData","CountryStats","geoData","totalFigure","response","map","data","geolocation","country","length","push","latitude","longitude","recovered","cases","critical","totalDeaths","deaths","total","totalCases","active","statistic_taken_at","total_cases","total_deaths","total_recovered","new_cases","new_deaths"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAO,GAAKC,CAAAA,kBAAZ,KAAoC,6BAApC,CACA,MAAO,GAAKC,CAAAA,oBAAZ,KAAsC,+BAAtC,CACA,OAASC,GAAT,CAAcC,SAAd,CAAyBC,GAAzB,KAAoC,cAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,0CAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oDAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8CAAvB,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAExB,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAEA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEAD,SAAS,CAAC,UAAM,CACZe,QAAQ,CAACZ,kBAAkB,CAACa,KAAnB,EAAD,CAAR,CACAD,QAAQ,CAACX,oBAAoB,CAACY,KAArB,EAAD,CAAR,CACAD,QAAQ,CAACX,oBAAoB,CAACa,WAArB,EAAD,CAAR,CACH,CAJQ,CAIN,CAACF,QAAD,CAJM,CAAT,CANwB,iBAYyBb,WAAW,CAAC,SAAAgB,KAAK,QAAK,CAEnEC,cAAc,CAAED,KAAK,CAACE,YAAN,CAAmBD,cAFgC,CAGnEE,OAAO,CAAEH,KAAK,CAACE,YAAN,CAAmBC,OAHuC,CAInEC,WAAW,CAAEJ,KAAK,CAACN,UAAN,CAAiBU,WAJqC,CAAL,EAAN,CAZpC,CAYhBH,cAZgB,cAYhBA,cAZgB,CAYAE,OAZA,cAYAA,OAZA,CAYSC,WAZT,cAYSA,WAZT,CAmBxB,GAAIH,cAAc,EAAIA,cAAc,CAACI,QAArC,CAA+C,CAE5CJ,cAAc,CAACI,QAAf,CAAwBC,GAAxB,CAA4B,SAAAC,IAAI,CAAI,CAC/B,GAAMC,CAAAA,WAAW,CAAGhB,WAAW,CAACe,IAAI,CAACE,OAAN,CAA/B,CACA,GAAID,WAAW,CAACE,MAAZ,CAAqB,CAAzB,CAA4B,CACxBd,WAAW,CAACe,IAAZ,CAAiB,CACbC,QAAQ,CAAEJ,WAAW,CAAC,CAAD,CAAX,CAAeI,QADZ,CAEbC,SAAS,CAAEL,WAAW,CAAC,CAAD,CAAX,CAAeK,SAFb,CAGbJ,OAAO,CAAEF,IAAI,CAACE,OAHD,CAIbK,SAAS,CAAEP,IAAI,CAACQ,KAAL,CAAWD,SAJT,CAKbE,QAAQ,CAAET,IAAI,CAACQ,KAAL,CAAWC,QALR,CAMbC,WAAW,CAAEV,IAAI,CAACW,MAAL,CAAYC,KANZ,CAObC,UAAU,CAAEb,IAAI,CAACQ,KAAL,CAAWI,KAPV,CAQbE,MAAM,CAAEd,IAAI,CAACQ,KAAL,CAAWM,MARN,CAAjB,EAUH,CACJ,CAdF,EAeF,CAED,mBACI,qDACI,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,6CAA3B,eAEI,oBAAC,GAAD,EAAK,SAAS,KAAd,CAAe,SAAS,CAAC,kBAAzB,eACI,oBAAC,UAAD,EAAY,KAAK,uCAAiCjB,WAAW,CAACkB,kBAA7C,KAAjB,CAAqF,QAAQ,CAAC,WAA9F,CAA0G,SAAS,CAAC,mBAApH,EADJ,CAFJ,cAKI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,eACI,oBAAC,UAAD,EACI,EAAE,CAAE,iBADR,CAEI,SAAS,CAAC,GAFd,CAGI,KAAK,CAAC,aAHV,CAII,KAAK,CAAElB,WAAW,CAACmB,WAJvB,EADJ,CADJ,cASI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,eACI,oBAAC,UAAD,EACI,EAAE,CAAE,iBADR,CAEI,SAAS,CAAC,GAFd,CAGI,KAAK,CAAC,cAHV,CAII,KAAK,CAAEnB,WAAW,CAACoB,YAJvB,EADJ,CATJ,cAiBI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,eACI,oBAAC,UAAD,EACI,EAAE,CAAE,mBADR,CAEI,SAAS,CAAC,GAFd,CAGI,KAAK,CAAC,iBAHV,CAII,KAAK,CAAEpB,WAAW,CAACqB,eAJvB,EADJ,CAjBJ,cAyBI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,eACI,oBAAC,UAAD,EACI,EAAE,CAAE,kBADR,CAEI,SAAS,CAAC,GAFd,CAGI,KAAK,CAAC,WAHV,CAII,KAAK,CAAErB,WAAW,CAACsB,SAJvB,EADJ,CAzBJ,cAiCI,oBAAC,GAAD,EAAK,SAAS,CAAC,aAAf,eACI,oBAAC,UAAD,EACI,EAAE,CAAE,kBADR,CAEI,SAAS,CAAC,GAFd,CAGI,KAAK,CAAC,YAHV,CAII,KAAK,CAAEtB,WAAW,CAACuB,UAJvB,EADJ,CAjCJ,CALJ,cA+CI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,IAAf,CAAoB,EAAE,CAAC,IAAvB,CAA4B,SAAS,CAAC,MAAtC,eACI,oBAAC,WAAD,EAAa,KAAK,CAAC,uBAAnB,CAA2C,WAAW,CAAE/B,WAAxD,CAAqE,OAAO,CAAEO,OAA9E,EADJ,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,CAAY,EAAE,CAAC,GAAf,CAAmB,EAAE,CAAC,IAAtB,CAA2B,SAAS,CAAC,MAArC,eACI,oBAAC,gBAAD,EAAkB,KAAK,CAAC,oCAAxB,CAA6D,eAAe,CAAEP,WAA9E,EADJ,CAJJ,CA/CJ,CADJ,CADJ,CA6DH,CAnGD,CAoGA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionForTotalStat from '../action/totalstats.action';\nimport * as actionForCountryStat from '../action/countryStats.action';\nimport { Row, Container, Col } from \"shards-react\";\nimport PageHeader from '../component/common/pageheader.component';\nimport CountryStat from '../component/statistics/countryStats.component';\nimport GeoLocation from '../utils/geoCountryData';\nimport CountryCaseStats from '../component/statistics/countryCaseStats.component';\nimport TotalStats from '../component/statistics/totalStats.component';\n\n\nconst DefaultLayout = () => {\n\n    const countryData = [];\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actionForTotalStat.fetch());\n        dispatch(actionForCountryStat.fetch());\n        dispatch(actionForCountryStat.fetchDvData());\n    }, [dispatch])\n\n    const { allCountryData, geoData, totalFigure } = useSelector(state => ({\n\n        allCountryData: state.CountryStats.allCountryData,\n        geoData: state.CountryStats.geoData,\n        totalFigure: state.TotalStats.totalFigure\n\n    }));\n    if (allCountryData && allCountryData.response) {\n\n       allCountryData.response.map(data => {\n            const geolocation = GeoLocation(data.country);\n            if (geolocation.length > 0) {\n                countryData.push({\n                    latitude: geolocation[0].latitude,\n                    longitude: geolocation[0].longitude,\n                    country: data.country,\n                    recovered: data.cases.recovered,\n                    critical: data.cases.critical,\n                    totalDeaths: data.deaths.total,\n                    totalCases: data.cases.total,\n                    active: data.cases.active\n                })\n            }\n        })\n    }\n\n    return (\n        <>\n            <Container fluid className=\"main-content-container px-4 container-fluid\">\n\n                <Row noGutters className=\"page-header py-4\">\n                    <PageHeader title={`Covid-19 Quick Stats as at (${totalFigure.statistic_taken_at})`} subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n                </Row>\n                <Row>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-one'}\n                            variation=\"1\"\n                            label=\"Total Cases\"\n                            value={totalFigure.total_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-two'}\n                            variation=\"1\"\n                            label=\"Total Deaths\"\n                            value={totalFigure.total_deaths}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-three'}\n                            variation=\"1\"\n                            label=\"Total Recovered\"\n                            value={totalFigure.total_recovered}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Cases\"\n                            value={totalFigure.new_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Deaths\"\n                            value={totalFigure.new_deaths}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <CountryStat title=\"Quick Stat by Country\" countryData={countryData} geoData={geoData} />\n                    </Col >\n                    <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                        <CountryCaseStats title=\"Covid-19 Case Breakdown By Country\" countryCaseData={countryData} />\n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    );\n}\nexport default DefaultLayout;"]},"metadata":{},"sourceType":"module"}