{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"https://covid-193.p.rapidapi.com/\";\nconst configuration = {\n  \"headers\": {\n    \"content-type\": \"application/octet-stream\",\n    \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n    \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n  }\n};\nexport default {\n  TotalStats(url = baseUrl + 'countries', config = configuration) {\n    return {\n      get: () => axios.get(url, config)\n    };\n  },\n\n  CountryStats(url = baseUrl + 'country', config = configuration) {\n    return {\n      get: date => axios.get(url + '?date=' + date, config),\n      fetch: () => axios.get('https:/g2.antv.vision/en/examples/data/world.geo.json')\n    };\n  }\n\n};","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/action/api.js"],"names":["axios","baseUrl","configuration","TotalStats","url","config","get","CountryStats","date","fetch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,mCAAhB;AAEA,MAAMC,aAAa,GAAG;AAElB,aAAW;AACP,oBAAgB,0BADT;AAEP,uBAAkB,0BAFX;AAGP,sBAAkB;AAHX;AAFO,CAAtB;AASA,eAAe;AAEXC,EAAAA,UAAU,CAACC,GAAG,GAAGH,OAAO,GAAG,WAAjB,EAA8BI,MAAM,GAAGH,aAAvC,EAAsD;AAC5D,WAAO;AACHI,MAAAA,GAAG,EAAE,MAAMN,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAeC,MAAf;AADR,KAAP;AAGH,GANU;;AAOZE,EAAAA,YAAY,CAACH,GAAG,GAAGH,OAAO,GAAG,SAAjB,EAA4BI,MAAM,GAAGH,aAArC,EAAoD;AAC3D,WAAO;AACHI,MAAAA,GAAG,EAAGE,IAAD,IAAUR,KAAK,CAACM,GAAN,CAAUF,GAAG,GAAG,QAAN,GAAiBI,IAA3B,EAAiCH,MAAjC,CADZ;AAEHI,MAAAA,KAAK,EAAE,MAAMT,KAAK,CAACM,GAAN,CAAU,uDAAV;AAFV,KAAP;AAKH;;AAbU,CAAf","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"https://covid-193.p.rapidapi.com/\"\n\nconst configuration = {\n\n    \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n    }\n}\n\nexport default {\n\n    TotalStats(url = baseUrl + 'countries', config = configuration) {\n        return {\n            get: () => axios.get(url, config)\n        }\n    },\n   CountryStats(url = baseUrl + 'country', config = configuration) {\n        return {\n            get: (date) => axios.get(url + '?date=' + date, config) ,\n            fetch: () => axios.get('https:/g2.antv.vision/en/examples/data/world.geo.json') \n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}