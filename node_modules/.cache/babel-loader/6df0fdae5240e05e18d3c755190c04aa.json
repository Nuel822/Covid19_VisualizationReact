{"ast":null,"code":"import { each, groupToMap } from '@antv/util';\n/** @ignore */\n\nexport function group(data, fields, appendConditions) {\n  if (appendConditions === void 0) {\n    appendConditions = {};\n  }\n\n  if (!fields) {\n    return [data];\n  }\n\n  var groups = groupToMap(data, fields);\n  var array = [];\n\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    var values = appendConditions[fields[0]];\n\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n      var value = values_1[_i];\n      var arr = groups[\"_\" + value];\n\n      if (arr) {\n        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n        array.push(arr);\n      }\n    }\n  } else {\n    each(groups, function (eachGroup) {\n      array.push(eachGroup);\n    });\n  }\n\n  return array;\n}","map":{"version":3,"sources":["../../../src/geometry/util/group-data.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,UAAf,QAAiC,YAAjC;AAGA;;AACA,OAAM,SAAU,KAAV,CAAgB,IAAhB,EAA4B,MAA5B,EAA8C,gBAA9C,EAA0F;AAA5C,MAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,EAAA;AAA4C;;AAC9F,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,CAAE,IAAF,CAAP;AACD;;AACD,MAAM,MAAM,GAAG,UAAU,CAAC,IAAD,EAAO,MAAP,CAAzB;AACA,MAAM,KAAK,GAAG,EAAd;;AACA,MAAI,MAAM,CAAC,MAAP,KAAkB,CAAlB,IAAuB,gBAAgB,CAAC,MAAM,CAAC,CAAD,CAAP,CAA3C,EAAwD;AACtD,QAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAD,CAAP,CAA/B;;AACA,SAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAApB,EAAoB,EAAA,GAAA,QAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAA4B;AAAvB,UAAM,KAAK,GAAA,QAAA,CAAA,EAAA,CAAX;AACH,UAAM,GAAG,GAAG,MAAM,CAAC,MAAI,KAAL,CAAlB;;AACA,UAAI,GAAJ,EAAS;AAAE;AACT,QAAA,KAAK,CAAC,IAAN,CAAW,GAAX;AACD;AACF;AACF,GARD,MAQO;AACL,IAAA,IAAI,CAAC,MAAD,EAAS,UAAC,SAAD,EAAiB;AAC5B,MAAA,KAAK,CAAC,IAAN,CAAW,SAAX;AACD,KAFG,CAAJ;AAGD;;AAED,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { each, groupToMap } from '@antv/util';\n/** @ignore */\nexport function group(data, fields, appendConditions) {\n    if (appendConditions === void 0) { appendConditions = {}; }\n    if (!fields) {\n        return [data];\n    }\n    var groups = groupToMap(data, fields);\n    var array = [];\n    if (fields.length === 1 && appendConditions[fields[0]]) {\n        var values = appendConditions[fields[0]];\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value = values_1[_i];\n            var arr = groups[\"_\" + value];\n            if (arr) { // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n                array.push(arr);\n            }\n        }\n    }\n    else {\n        each(groups, function (eachGroup) {\n            array.push(eachGroup);\n        });\n    }\n    return array;\n}\n//# sourceMappingURL=group-data.js.map"]},"metadata":{},"sourceType":"module"}