{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: PropTypes.bool\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true,\n  selectHintOnEnter: false\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this._hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this._hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    return _this;\n  }\n\n  var _proto = Typeahead.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n\n    var mergedPropsAndState = _extends({}, otherProps, {}, this.state);\n\n    var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n\n      if (shouldPaginate) {\n        var _results$push2;\n\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n\n    return React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      items: this.items,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this._hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results\n    }));\n  };\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;","map":{"version":3,"sources":["/Users/bobby/Desktop/Covid19_VisualizationReact/node_modules/react-bootstrap-typeahead/es/core/Typeahead.js"],"names":["_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","_extends","isEqual","PropTypes","React","TypeaheadManager","caseSensitiveType","checkPropType","defaultInputValueType","defaultSelectedType","highlightOnlyResultType","ignoreDiacriticsType","isRequiredForA11y","labelKeyType","optionType","selectedType","addCustomOption","defaultFilterBy","getOptionLabel","getStringLabelKey","getUpdatedActiveIndex","getTruncatedOptions","head","isShown","isString","noop","uniqueId","validateSelectedPropChange","DEFAULT_LABELKEY","DOWN","ESC","RETURN","TAB","UP","propTypes","allowNew","oneOfType","bool","func","autoFocus","caseSensitive","defaultInputValue","string","defaultOpen","defaultSelected","arrayOf","filterBy","isRequired","highlightOnlyResult","id","number","ignoreDiacritics","labelKey","maxResults","minLength","multiple","onBlur","onChange","onFocus","onInputChange","onKeyDown","onMenuToggle","onPaginate","open","options","paginate","selected","selectHintOnEnter","defaultProps","getInitialState","props","slice","text","length","activeIndex","activeItem","initialItem","isFocused","showMenu","shownResults","clearTypeahead","state","hideMenu","_getInitialState","Typeahead","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","concat","inputNode","blur","_hideMenu","setState","focus","e","persist","_handleChange","currentTarget","value","_this$props","shouldClearSelections","_getInitialState2","isMenuShown","keyCode","preventDefault","_handleActiveIndexChange","items","_handleMenuItemSelect","option","paginationOption","_handlePaginate","_handleSelectionAdd","_this$props2","selection","customOption","filter","_proto","prototype","componentDidMount","componentDidUpdate","prevProps","prevState","_this$props3","render","_this$props4","otherProps","mergedPropsAndState","results","cb","shouldPaginate","_results$push","push","_results$push2","createElement","inputRef","onActiveItemChange","_handleActiveItemChange","onAdd","_handleBlur","_handleInputChange","onClear","_handleClear","_handleFocus","onHide","onInitialItemChange","_handleInitialItemChange","_handleKeyDown","onMenuItemClick","onRemove","_handleSelectionRemove","Component"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: PropTypes.bool\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true,\n  selectHintOnEnter: false\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this._hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this._hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    return _this;\n  }\n\n  var _proto = Typeahead.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n\n    var mergedPropsAndState = _extends({}, otherProps, {}, this.state);\n\n    var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n\n      if (shouldPaginate) {\n        var _results$push2;\n\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n\n    return React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      items: this.items,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this._hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results\n    }));\n  };\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;"]},"metadata":{},"sourceType":"module"}