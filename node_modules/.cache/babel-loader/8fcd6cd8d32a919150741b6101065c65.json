{"ast":null,"code":"import { isArray } from '@antv/util';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getShapeAttrs } from './util';\nvar AreaShapeFactory = registerShapeFactory('area', {\n  defaultShapeType: 'area',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    // area 基本标记的绘制需要获取上下两边的顶点\n    var x = pointInfo.x,\n        y0 = pointInfo.y0;\n    var y = isArray(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];\n    return y.map(function (yItem) {\n      return {\n        x: x,\n        y: yItem\n      };\n    });\n  }\n}); // Area 几何标记默认的 shape：填充的区域图\n\nregisterShape('area', 'area', {\n  draw: function draw(cfg, container) {\n    var attrs = getShapeAttrs(cfg, false, false, this);\n    var shape = container.addShape({\n      type: 'path',\n      attrs: attrs,\n      name: 'area'\n    });\n    return shape;\n  },\n  getMarker: function getMarker(markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function symbol(x, y, r) {\n        if (r === void 0) {\n          r = 5.5;\n        }\n\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color\n      }\n    };\n  }\n});\nexport default AreaShapeFactory;","map":{"version":3,"sources":["../../../../src/geometry/shape/area/index.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,YAAxB;AAGA,SAAS,aAAT,EAAwB,oBAAxB,QAAoD,SAApD;AACA,SAAS,aAAT,QAA8B,QAA9B;AAEA,IAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAD,EAAS;AACpD,EAAA,gBAAgB,EAAE,MADkC;AAEpD,EAAA,gBAAgB,EAAhB,0BAAiB,SAAjB,EAAsC;AACpC;AACQ,QAAA,CAAA,GAAA,SAAA,CAAA,CAAA;AAAA,QAAG,EAAA,GAAA,SAAA,CAAA,EAAH;AACR,QAAM,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,CAAX,CAAP,GAAuB,SAAS,CAAC,CAAjC,GAAqC,CAAC,EAAD,EAAK,SAAS,CAAC,CAAf,CAA/C;AAEA,WAAO,CAAC,CAAC,GAAF,CAAM,UAAC,KAAD,EAAc;AACzB,aAAO;AACL,QAAA,CAAC,EAAE,CADE;AAEL,QAAA,CAAC,EAAE;AAFE,OAAP;AAID,KALM,CAAP;AAMD;AAbmD,CAAT,CAA7C,C,CAgBA;;AACA,aAAa,CAAC,MAAD,EAAS,MAAT,EAAiB;AAC5B,EAAA,IAAI,EAAJ,cAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAM,KAAK,GAAG,aAAa,CAAC,GAAD,EAAM,KAAN,EAAa,KAAb,EAAoB,IAApB,CAA3B;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,CAAmB;AAC/B,MAAA,IAAI,EAAE,MADyB;AAE/B,MAAA,KAAK,EAAA,KAF0B;AAG/B,MAAA,IAAI,EAAE;AAHyB,KAAnB,CAAd;AAMA,WAAO,KAAP;AACD,GAV2B;AAW5B,EAAA,SAAS,EAAT,mBAAU,SAAV,EAAmC;AACzB,QAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AACR,WAAO;AACL,MAAA,MAAM,EAAE,gBAAC,CAAD,EAAY,CAAZ,EAAuB,CAAvB,EAAsC;AAAf,YAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AAAA,UAAA,CAAA,GAAA,GAAA;AAAe;;AAC5C,eAAO,CAAC,CAAC,GAAD,EAAM,CAAC,GAAG,CAAV,EAAa,CAAC,GAAG,CAAjB,CAAD,EAAsB,CAAC,GAAD,EAAM,CAAC,GAAG,CAAV,EAAa,CAAC,GAAG,CAAjB,CAAtB,EAA2C,CAAC,GAAD,EAAM,CAAC,GAAG,CAAV,EAAa,CAAC,GAAG,CAAjB,CAA3C,EAAgE,CAAC,GAAD,EAAM,CAAC,GAAG,CAAV,EAAa,CAAC,GAAG,CAAjB,CAAhE,EAAqF,CAAC,GAAD,CAArF,CAAP;AACD,OAHI;AAIL,MAAA,KAAK,EAAE;AACL,QAAA,CAAC,EAAE,CADE;AAEL,QAAA,IAAI,EAAE;AAFD;AAJF,KAAP;AASD;AAtB2B,CAAjB,CAAb;AAyBA,eAAe,gBAAf","sourceRoot":"","sourcesContent":["import { isArray } from '@antv/util';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getShapeAttrs } from './util';\nvar AreaShapeFactory = registerShapeFactory('area', {\n    defaultShapeType: 'area',\n    getDefaultPoints: function (pointInfo) {\n        // area 基本标记的绘制需要获取上下两边的顶点\n        var x = pointInfo.x, y0 = pointInfo.y0;\n        var y = isArray(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];\n        return y.map(function (yItem) {\n            return {\n                x: x,\n                y: yItem,\n            };\n        });\n    },\n});\n// Area 几何标记默认的 shape：填充的区域图\nregisterShape('area', 'area', {\n    draw: function (cfg, container) {\n        var attrs = getShapeAttrs(cfg, false, false, this);\n        var shape = container.addShape({\n            type: 'path',\n            attrs: attrs,\n            name: 'area',\n        });\n        return shape;\n    },\n    getMarker: function (markerCfg) {\n        var color = markerCfg.color;\n        return {\n            symbol: function (x, y, r) {\n                if (r === void 0) { r = 5.5; }\n                return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n            },\n            style: {\n                r: 5,\n                fill: color,\n            },\n        };\n    },\n});\nexport default AreaShapeFactory;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}