{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/layout/defaultLayout.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionForTotalStat from '../action/totalstats.action';\nimport * as actionForCountryStat from '../action/countryStats.action';\nimport { Row, Container, Col } from \"shards-react\";\nimport PageHeader from '../component/pageTitle/pageheader.component';\nimport TotalStats from '../component/statistics/totalStats.component';\nimport CountryStat from '../component/statistics/countryStats.component';\nimport GeoLocation from '../utils/geoCountryData';\nimport CountryCaseStats from '../component/statistics/countryCaseStats.component';\n\nconst DefaultLayout = () => {\n  const countryData = [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //dispatch(actionForTotalStat.fetch());\n    dispatch(actionForCountryStat.fetch()); // dispatch(actionForCountryStat.fetchDvData());\n  }, [dispatch]);\n  const {\n    allCountryData,\n    geoData,\n    totalFigure\n  } = useSelector(state => ({\n    allCountryData: state.CountryStats.allCountryData,\n    geoData: state.CountryStats.geoData,\n    totalFigure: state.TotalStats.totalFigure\n  }));\n\n  if (allCountryData && allCountryData.response) {\n    allCountryData.response.map(data => {\n      const geolocation = GeoLocation(data.country);\n\n      if (geolocation.length > 0) {\n        countryData.push({\n          latitude: geolocation[0].latitude,\n          longitude: geolocation[0].longitude,\n          country: data.country,\n          recovered: data.cases.recovered,\n          critical: data.cases.critical,\n          totalDeaths: data.deaths.total,\n          totalCases: data.cases.total,\n          active: data.cases.active\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: `Covid-19 Quick Stats as at ${totalFigure.statistic_taken_at}`,\n    subtitle: \"Dashboard\",\n    className: \"text-sm-left mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CountryCaseStats, {\n    title: \"Covid-19 Case Breakdown By Country\",\n    countryCaseData: countryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default DefaultLayout;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/layout/defaultLayout.jsx"],"names":["React","useEffect","useDispatch","useSelector","actionForTotalStat","actionForCountryStat","Row","Container","Col","PageHeader","TotalStats","CountryStat","GeoLocation","CountryCaseStats","DefaultLayout","countryData","dispatch","fetch","allCountryData","geoData","totalFigure","state","CountryStats","response","map","data","geolocation","country","length","push","latitude","longitude","recovered","cases","critical","totalDeaths","deaths","total","totalCases","active","statistic_taken_at"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actionForTotalStat from '../action/totalstats.action'\nimport * as actionForCountryStat from '../action/countryStats.action'\nimport { Row, Container, Col } from \"shards-react\";\nimport PageHeader from '../component/pageTitle/pageheader.component';\nimport TotalStats from '../component/statistics/totalStats.component';\nimport CountryStat from '../component/statistics/countryStats.component';\nimport GeoLocation from '../utils/geoCountryData';\nimport CountryCaseStats from '../component/statistics/countryCaseStats.component';\n\n\nconst DefaultLayout = () => {\n\n    const countryData = [];\n\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n      //dispatch(actionForTotalStat.fetch());\n        dispatch(actionForCountryStat.fetch());\n        // dispatch(actionForCountryStat.fetchDvData());\n    }, [dispatch])\n\n    const { allCountryData, geoData, totalFigure } = useSelector(state => ({\n        allCountryData: state.CountryStats.allCountryData,\n        geoData: state.CountryStats.geoData,\n        totalFigure: state.TotalStats.totalFigure\n    }));\n\n    if (allCountryData && allCountryData.response) {\n\n        allCountryData.response.map(data => {\n            const geolocation = GeoLocation(data.country);\n            if (geolocation.length > 0) {\n                countryData.push({\n                    latitude: geolocation[0].latitude,\n                    longitude: geolocation[0].longitude,\n                    country: data.country,\n                    recovered: data.cases.recovered,\n                    critical: data.cases.critical,\n                    totalDeaths: data.deaths.total,\n                    totalCases: data.cases.total,\n                    active: data.cases.active\n                })\n            }\n        })\n    }\n\n    return (\n        <>\n            <Container fluid className=\"main-content-container px-4 container-fluid\">\n                <Row noGutters className=\"page-header py-4\">\n                    <PageHeader title={`Covid-19 Quick Stats as at ${totalFigure.statistic_taken_at}`} subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n                </Row>\n                {/* <Row>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-one'}\n                            variation=\"1\"\n                            label=\"Total Cases\"\n                            value={totalFigure.total_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-two'}\n                            variation=\"1\"\n                            label=\"Total Deaths\"\n                            value={totalFigure.total_deaths}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-three'}\n                            variation=\"1\"\n                            label=\"Total Recovered\"\n                            value={totalFigure.total_recovered}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Cases\"\n                            value={totalFigure.new_cases}\n                        />\n                    </Col>\n                    <Col className=\"col-lg mb-4\">\n                        <TotalStats\n                            id={'small-stats-four'}\n                            variation=\"1\"\n                            label=\"New Deaths\"\n                            value={totalFigure.new_deaths}\n                        />\n                    </Col>\n                </Row> */}\n                <Row>\n                    {/* <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <CountryStat title=\"Quick Stat by Country\" countryData={countryData} geoData={geoData} />\n                    </Col > */}\n                    <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                        <CountryCaseStats title=\"Covid-19 Case Breakdown By Country\" countryCaseData={countryData}/>\n                    </Col>\n                </Row>\n\n            </Container>\n        </>\n    );\n}\nexport default DefaultLayout;"]},"metadata":{},"sourceType":"module"}