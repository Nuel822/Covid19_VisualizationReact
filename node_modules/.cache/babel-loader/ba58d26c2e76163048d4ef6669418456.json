{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport shortid from \"shortid\";\nconst initialState = {\n  searchInput: [],\n  chartData: [],\n  chartInnerTitle: \"\",\n  render: false,\n  renderKey: 0,\n  previousSearch: \"\"\n};\n\nconst CountryCaseStats = props => {\n  const [state, setstate] = useState(initialState);\n\n  const displayChart = () => {\n    const countryData = [];\n    var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase()); // const countryData = [\n    //     { item: \"Active\", count: 80, percent: 0.8 },\n    //     { item: \"Critical\", count: 1, percent: 0.01 },\n    //     { item: \"Recovered\", count: 18, percent: 0.18 },\n    //     { item: \"Deaths\", count: 2, percent: 0.02 }\n    // ];\n    // var filterResult = {\n    //     latitude: \"9.081999\",\n    //     longitude: \"8.675277\",\n    //     country: \"Nigeria\",\n    //     recovered: 51,\n    //     critical: 2,\n    //     totalDeaths: 7,\n    //     totalCases: 288,\n    //     active: 230\n    // }\n\n    if (filterResult.length > 0 && state.previousSearch !== state.searchInput) {\n      const percentageActive = (filterResult[0].active / filterResult[0].totalCases).toFixed(2);\n      const percentageCritical = (filterResult[0].critical / filterResult[0].totalCases).toFixed(2) == 0 ? 0.01 : (filterResult[0].critical / filterResult[0].totalCases).toFixed(2);\n      const percentageRecovered = (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2);\n      const percentageDeaths = (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2); //  const percentageActive = ((filterResult.active / filterResult.totalCases)).toFixed(2);\n      // const percentageCritical = (((filterResult.critical / filterResult.totalCases)).toFixed(2))\n      // const percentageRecovered = (((filterResult.recovered / filterResult.totalCases))).toFixed(2)\n      // const percentageDeaths = (((filterResult.totalDeaths / filterResult.totalCases))).toFixed(2)\n\n      countryData.push({\n        item: \"Active\",\n        count: ~~(percentageActive * 100),\n        percent: parseFloat(percentageActive)\n      });\n      countryData.push({\n        item: \"Critical\",\n        count: ~~(percentageCritical * 100),\n        percent: parseFloat(percentageCritical)\n      });\n      countryData.push({\n        item: \"Recovered\",\n        count: ~~(percentageRecovered * 100),\n        percent: parseFloat(percentageRecovered)\n      });\n      countryData.push({\n        item: \"Deaths\",\n        count: ~~(percentageDeaths * 100),\n        percent: parseFloat(percentageDeaths)\n      });\n      setstate({\n        searchInput: state.searchInput,\n        chartData: countryData,\n        chartInnerTitle: filterResult[0].totalCases,\n        render: true,\n        previousSearch: state.searchInput\n      });\n    }\n  };\n\n  const handleChange = e => {\n    setstate({\n      searchInput: e.target.value\n    });\n  };\n\n  const searchNotFoundStyle = {\n    color: '#FF0000'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    seamless: true,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Enter Country Name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    type: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    theme: \"primary\",\n    onClick: displayChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPieChart\",\n    key: state.searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, state && state.searchInput !== state.previousSearch && /*#__PURE__*/React.createElement(DisplayPieChart, {\n    innerChartTitle: state.chartInnerTitle,\n    chartData: state.chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CountryCaseStats;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx"],"names":["React","useState","Card","CardHeader","CardBody","Button","InputGroup","FormInput","InputGroupAddon","DisplayPieChart","shortid","initialState","searchInput","chartData","chartInnerTitle","render","renderKey","previousSearch","CountryCaseStats","props","state","setstate","displayChart","countryData","filterResult","countryCaseData","filter","data","toLowerCase","country","length","percentageActive","active","totalCases","toFixed","percentageCritical","critical","percentageRecovered","recovered","percentageDeaths","totalDeaths","push","item","count","percent","parseFloat","handleChange","e","target","value","searchNotFoundStyle","color","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component'\nimport shortid from \"shortid\";\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false,\n    renderKey: 0,\n    previousSearch:\"\"\n}\n\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState);\n\n    const displayChart = () => {\n\n        const countryData = [];\n\n        var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase());\n\n        // const countryData = [\n        //     { item: \"Active\", count: 80, percent: 0.8 },\n        //     { item: \"Critical\", count: 1, percent: 0.01 },\n        //     { item: \"Recovered\", count: 18, percent: 0.18 },\n        //     { item: \"Deaths\", count: 2, percent: 0.02 }\n        // ];\n\n        // var filterResult = {\n\n        //     latitude: \"9.081999\",\n        //     longitude: \"8.675277\",\n        //     country: \"Nigeria\",\n        //     recovered: 51,\n        //     critical: 2,\n        //     totalDeaths: 7,\n        //     totalCases: 288,\n        //     active: 230\n        // }\n\n        if (filterResult.length > 0 && state.previousSearch !== state.searchInput) {\n\n            const percentageActive = ((filterResult[0].active / filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2)) == 0 ? 0.01 : (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2)\n\n            //  const percentageActive = ((filterResult.active / filterResult.totalCases)).toFixed(2);\n            // const percentageCritical = (((filterResult.critical / filterResult.totalCases)).toFixed(2))\n            // const percentageRecovered = (((filterResult.recovered / filterResult.totalCases))).toFixed(2)\n            // const percentageDeaths = (((filterResult.totalDeaths / filterResult.totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n\n            setstate({searchInput:state.searchInput, chartData: countryData, chartInnerTitle: filterResult[0].totalCases, render: true,previousSearch: state.searchInput})\n\n        }\n    }\n\n    const handleChange = (e) => {\n        setstate({ searchInput: e.target.value })\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                <InputGroup seamless className=\"mb-3\">\n                    <FormInput placeholder=\"Enter Country Name\" onChange={handleChange} />\n                    <InputGroupAddon type=\"append\">\n                        <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                    </InputGroupAddon>\n                </InputGroup>\n\n\n                <div id=\"containerPieChart\" key={state.searchInput}>\n                    {state && state.searchInput !== state.previousSearch && (\n                        <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData} />\n                    )}\n                </div>\n                {/* {state && state.chartData.length == 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )} */}\n\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n"]},"metadata":{},"sourceType":"module"}