{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { transform } from '@antv/matrix-util';\nimport { each } from '@antv/util';\n\nfunction doShapeZoom(shape, animateCfg, type) {\n  if (shape.isGroup()) {\n    each(shape.getChildren(), function (child) {\n      doShapeZoom(child, animateCfg, type);\n    });\n  } else {\n    var bbox = shape.getBBox();\n    var x = (bbox.minX + bbox.maxX) / 2;\n    var y = (bbox.minY + bbox.maxY) / 2;\n    shape.applyToMatrix([x, y, 1]);\n\n    if (type === 'zoomIn') {\n      // 放大\n      var matrix = transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]);\n      shape.setMatrix(matrix);\n      shape.animate({\n        matrix: transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 100], ['t', x, y]])\n      }, animateCfg);\n    } else {\n      shape.animate({\n        matrix: transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]])\n      }, __assign(__assign({}, animateCfg), {\n        callback: function () {\n          shape.remove(true);\n        }\n      }));\n    }\n  }\n}\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\n\nexport function zoomIn(shape, animateCfg, cfg) {\n  doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function zoomOut(shape, animateCfg, cfg) {\n  doShapeZoom(shape, animateCfg, 'zoomOut');\n}","map":{"version":3,"sources":["../../../src/animate/animation/zoom.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,QAA0B,mBAA1B;AACA,SAAS,IAAT,QAAqB,YAArB;;AAKA,SAAS,WAAT,CAAqB,KAArB,EAA6C,UAA7C,EAAsE,IAAtE,EAAgG;AAC9F,MAAI,KAAK,CAAC,OAAN,EAAJ,EAAqB;AACnB,IAAA,IAAI,CAAE,KAAgB,CAAC,WAAjB,EAAF,EAAkC,UAAC,KAAD,EAAM;AAC1C,MAAA,WAAW,CAAC,KAAD,EAAQ,UAAR,EAAoB,IAApB,CAAX;AACD,KAFG,CAAJ;AAGD,GAJD,MAIO;AACL,QAAM,IAAI,GAAG,KAAK,CAAC,OAAN,EAAb;AACA,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAlB,IAA0B,CAApC;AACA,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,IAAlB,IAA0B,CAApC;AACA,IAAA,KAAK,CAAC,aAAN,CAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB;;AAEA,QAAI,IAAI,KAAK,QAAb,EAAuB;AACrB;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,SAAN,EAAD,EAAoB,CAC1C,CAAC,GAAD,EAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAD0C,EAE1C,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAF0C,EAG1C,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAH0C,CAApB,CAAxB;AAKA,MAAA,KAAK,CAAC,SAAN,CAAgB,MAAhB;AACA,MAAA,KAAK,CAAC,OAAN,CACE;AACE,QAAA,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,SAAN,EAAD,EAAoB,CACnC,CAAC,GAAD,EAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CADmC,EAEnC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFmC,EAGnC,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAHmC,CAApB;AADnB,OADF,EAQE,UARF;AAUD,KAlBD,MAkBO;AACL,MAAA,KAAK,CAAC,OAAN,CACE;AACE,QAAA,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,SAAN,EAAD,EAAoB,CACnC,CAAC,GAAD,EAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CADmC,EAEnC,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAFmC,EAGnC,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAHmC,CAApB;AADnB,OADF,EAOG,QAAA,CAAA,QAAA,CAAA,EAAA,EAEI,UAFJ,CAAA,EAEc;AACb,QAAA,QAAQ,EAAE,YAAA;AACR,UAAA,KAAK,CAAC,MAAN,CAAa,IAAb;AACD;AAHY,OAFd,CAPH;AAeD;AACF;AACF;AAED;;;;;;;;;;AAQA,OAAM,SAAU,MAAV,CAAiB,KAAjB,EAAyC,UAAzC,EAAkE,GAAlE,EAAsF;AAC1F,EAAA,WAAW,CAAC,KAAD,EAAQ,UAAR,EAAoB,QAApB,CAAX;AACD;AAED;;;;;;;;;AAQA,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAA0C,UAA1C,EAAmE,GAAnE,EAAuF;AAC3F,EAAA,WAAW,CAAC,KAAD,EAAQ,UAAR,EAAoB,SAApB,CAAX;AACD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { transform } from '@antv/matrix-util';\nimport { each } from '@antv/util';\nfunction doShapeZoom(shape, animateCfg, type) {\n    if (shape.isGroup()) {\n        each(shape.getChildren(), function (child) {\n            doShapeZoom(child, animateCfg, type);\n        });\n    }\n    else {\n        var bbox = shape.getBBox();\n        var x = (bbox.minX + bbox.maxX) / 2;\n        var y = (bbox.minY + bbox.maxY) / 2;\n        shape.applyToMatrix([x, y, 1]);\n        if (type === 'zoomIn') {\n            // 放大\n            var matrix = transform(shape.getMatrix(), [\n                ['t', -x, -y],\n                ['s', 0.01, 0.01],\n                ['t', x, y],\n            ]);\n            shape.setMatrix(matrix);\n            shape.animate({\n                matrix: transform(shape.getMatrix(), [\n                    ['t', -x, -y],\n                    ['s', 100, 100],\n                    ['t', x, y],\n                ]),\n            }, animateCfg);\n        }\n        else {\n            shape.animate({\n                matrix: transform(shape.getMatrix(), [\n                    ['t', -x, -y],\n                    ['s', 0.01, 0.01],\n                    ['t', x, y],\n                ]),\n            }, __assign(__assign({}, animateCfg), { callback: function () {\n                    shape.remove(true);\n                } }));\n        }\n    }\n}\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomIn(shape, animateCfg, cfg) {\n    doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomOut(shape, animateCfg, cfg) {\n    doShapeZoom(shape, animateCfg, 'zoomOut');\n}\n//# sourceMappingURL=zoom.js.map"]},"metadata":{},"sourceType":"module"}