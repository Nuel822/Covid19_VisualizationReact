{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getPixelRatio() {\n  return window ? window.devicePixelRatio : 1;\n}\n\nexports.getPixelRatio = getPixelRatio;\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\n\nfunction distance(x1, y1, x2, y2) {\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexports.distance = distance;\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\n\nfunction inBox(minX, minY, width, height, x, y) {\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\n\nexports.inBox = inBox; // 全局设置一个唯一离屏的 ctx，用于计算 isPointInPath\n\nvar offScreenCtx = null;\n\nfunction getOffScreenContext() {\n  if (!offScreenCtx) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    offScreenCtx = canvas.getContext('2d');\n  }\n\n  return offScreenCtx;\n}\n\nexports.getOffScreenContext = getOffScreenContext;\n\nfunction intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\nexports.intersectRect = intersectRect; // 合并两个区域\n\nfunction mergeRegion(region1, region2) {\n  if (!region1 || !region2) {\n    return region1 || region2;\n  }\n\n  return {\n    minX: Math.min(region1.minX, region2.minX),\n    minY: Math.min(region1.minY, region2.minY),\n    maxX: Math.max(region1.maxX, region2.maxX),\n    maxY: Math.max(region1.maxY, region2.maxY)\n  };\n}\n\nexports.mergeRegion = mergeRegion;\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\n\nfunction isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\n\nexports.isSamePoint = isSamePoint;\n\nvar is_nil_1 = require(\"@antv/util/lib/is-nil\");\n\nexports.isNil = is_nil_1.default;\n\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\n\nexports.isString = is_string_1.default;\n\nvar is_function_1 = require(\"@antv/util/lib/is-function\");\n\nexports.isFunction = is_function_1.default;\n\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\n\nexports.isArray = is_array_1.default;\n\nvar each_1 = require(\"@antv/util/lib/each\");\n\nexports.each = each_1.default;\n\nvar to_radian_1 = require(\"@antv/util/lib/to-radian\");\n\nexports.toRadian = to_radian_1.default;\n\nvar mod_1 = require(\"@antv/util/lib/mod\");\n\nexports.mod = mod_1.default;\n\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\n\nexports.isNumberEqual = is_number_equal_1.default;\n\nvar request_animation_frame_1 = require(\"@antv/util/lib/request-animation-frame\");\n\nexports.requestAnimationFrame = request_animation_frame_1.default;\n\nvar clear_animation_frame_1 = require(\"@antv/util/lib/clear-animation-frame\");\n\nexports.clearAnimationFrame = clear_animation_frame_1.default;","map":{"version":3,"sources":["../../src/util/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getPixelRatio() {\n    return window ? window.devicePixelRatio : 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\nfunction distance(x1, y1, x2, y2) {\n    var dx = x1 - x2;\n    var dy = y1 - y2;\n    return Math.sqrt(dx * dx + dy * dy);\n}\nexports.distance = distance;\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\nfunction inBox(minX, minY, width, height, x, y) {\n    return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nexports.inBox = inBox;\n// 全局设置一个唯一离屏的 ctx，用于计算 isPointInPath\nvar offScreenCtx = null;\nfunction getOffScreenContext() {\n    if (!offScreenCtx) {\n        var canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        offScreenCtx = canvas.getContext('2d');\n    }\n    return offScreenCtx;\n}\nexports.getOffScreenContext = getOffScreenContext;\nfunction intersectRect(box1, box2) {\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\nexports.intersectRect = intersectRect;\n// 合并两个区域\nfunction mergeRegion(region1, region2) {\n    if (!region1 || !region2) {\n        return region1 || region2;\n    }\n    return {\n        minX: Math.min(region1.minX, region2.minX),\n        minY: Math.min(region1.minY, region2.minY),\n        maxX: Math.max(region1.maxX, region2.maxX),\n        maxY: Math.max(region1.maxY, region2.maxY),\n    };\n}\nexports.mergeRegion = mergeRegion;\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nfunction isSamePoint(point1, point2) {\n    return point1[0] === point2[0] && point1[1] === point2[1];\n}\nexports.isSamePoint = isSamePoint;\nvar is_nil_1 = require(\"@antv/util/lib/is-nil\");\nexports.isNil = is_nil_1.default;\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\nexports.isString = is_string_1.default;\nvar is_function_1 = require(\"@antv/util/lib/is-function\");\nexports.isFunction = is_function_1.default;\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\nexports.isArray = is_array_1.default;\nvar each_1 = require(\"@antv/util/lib/each\");\nexports.each = each_1.default;\nvar to_radian_1 = require(\"@antv/util/lib/to-radian\");\nexports.toRadian = to_radian_1.default;\nvar mod_1 = require(\"@antv/util/lib/mod\");\nexports.mod = mod_1.default;\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\nexports.isNumberEqual = is_number_equal_1.default;\nvar request_animation_frame_1 = require(\"@antv/util/lib/request-animation-frame\");\nexports.requestAnimationFrame = request_animation_frame_1.default;\nvar clear_animation_frame_1 = require(\"@antv/util/lib/clear-animation-frame\");\nexports.clearAnimationFrame = clear_animation_frame_1.default;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}