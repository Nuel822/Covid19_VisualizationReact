{"ast":null,"code":"import { each } from '@antv/util';\n/**\n * Component Controller 规范需要定义的基类\n * 1. 规范的 option 输入\n * 2. 统一的信息获取 API\n * 3. 明确定义的组件事件（名称、数据）\n */\n\nvar Controller =\n/** @class */\nfunction () {\n  function Controller(view) {\n    /** 是否可见 */\n    this.visible = true;\n    /** 所有的 component */\n\n    this.components = [];\n    this.view = view;\n  }\n  /**\n   * clear\n   */\n\n\n  Controller.prototype.clear = function () {\n    // destroy all components\n    each(this.components, function (co) {\n      co.component.destroy();\n    }); // clear all component instance\n\n    this.components = [];\n  };\n  /**\n   * destroy the component\n   */\n\n\n  Controller.prototype.destroy = function () {\n    this.clear();\n  };\n  /**\n   * get all components\n   * @returns components array\n   */\n\n\n  Controller.prototype.getComponents = function () {\n    return this.components;\n  };\n  /**\n   * change visibility of component\n   * @param visible\n   */\n\n\n  Controller.prototype.changeVisible = function (visible) {\n    if (this.visible === visible) {\n      return;\n    }\n\n    this.components.forEach(function (co) {\n      if (visible) {\n        co.component.show();\n      } else {\n        co.component.hide();\n      }\n    });\n    this.visible = visible;\n  };\n\n  return Controller;\n}();\n\nexport { Controller };","map":{"version":3,"sources":["../../../src/chart/controller/base.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,YAArB;AAOA;;;;;;;AAMA,IAAA,UAAA;AAAA;AAAA,YAAA;AASE,WAAA,UAAA,CAAY,IAAZ,EAAsB;AARtB;AACO,SAAA,OAAA,GAAmB,IAAnB;AAIP;;AACU,SAAA,UAAA,GAAgC,EAAhC;AAGR,SAAK,IAAL,GAAY,IAAZ;AACD;AAkCD;;;;;AAGO,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE;AACA,IAAA,IAAI,CAAC,KAAK,UAAN,EAAkB,UAAC,EAAD,EAAoB;AACxC,MAAA,EAAE,CAAC,SAAH,CAAa,OAAb;AACD,KAFG,CAAJ,CAFF,CAME;;AACA,SAAK,UAAL,GAAkB,EAAlB;AACD,GARM;AAUP;;;;;AAGO,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AACE,SAAK,KAAL;AACD,GAFM;AAIP;;;;;;AAIO,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACE,WAAO,KAAK,UAAZ;AACD,GAFM;AAIP;;;;;;AAIO,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,OAArB,EAAqC;AACnC,QAAI,KAAK,OAAL,KAAiB,OAArB,EAA8B;AAC5B;AACD;;AACD,SAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAC,EAAD,EAAoB;AAC1C,UAAI,OAAJ,EAAa;AACX,QAAA,EAAE,CAAC,SAAH,CAAa,IAAb;AACD,OAFD,MAEO;AACL,QAAA,EAAE,CAAC,SAAH,CAAa,IAAb;AACD;AACF,KAND;AAOA,SAAK,OAAL,GAAe,OAAf;AACD,GAZM;;AAaT,SAAA,UAAA;AAAC,CA1FD,EAAA","sourceRoot":"","sourcesContent":["import { each } from '@antv/util';\n/**\n * Component Controller 规范需要定义的基类\n * 1. 规范的 option 输入\n * 2. 统一的信息获取 API\n * 3. 明确定义的组件事件（名称、数据）\n */\nvar Controller = /** @class */ (function () {\n    function Controller(view) {\n        /** 是否可见 */\n        this.visible = true;\n        /** 所有的 component */\n        this.components = [];\n        this.view = view;\n    }\n    /**\n     * clear\n     */\n    Controller.prototype.clear = function () {\n        // destroy all components\n        each(this.components, function (co) {\n            co.component.destroy();\n        });\n        // clear all component instance\n        this.components = [];\n    };\n    /**\n     * destroy the component\n     */\n    Controller.prototype.destroy = function () {\n        this.clear();\n    };\n    /**\n     * get all components\n     * @returns components array\n     */\n    Controller.prototype.getComponents = function () {\n        return this.components;\n    };\n    /**\n     * change visibility of component\n     * @param visible\n     */\n    Controller.prototype.changeVisible = function (visible) {\n        if (this.visible === visible) {\n            return;\n        }\n        this.components.forEach(function (co) {\n            if (visible) {\n                co.component.show();\n            }\n            else {\n                co.component.hide();\n            }\n        });\n        this.visible = visible;\n    };\n    return Controller;\n}());\nexport { Controller };\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}