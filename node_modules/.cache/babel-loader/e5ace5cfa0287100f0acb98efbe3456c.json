{"ast":null,"code":"import React from'react';import{Chart}from'@antv/g2';var DisplayPieChart=function DisplayPieChart(props){if(props.chartData&&props.chartData.length>0){var chart=new Chart({container:'containerPieChart',autoFit:true,height:500});chart.data(props.chartData);chart.scale('percent',{formatter:function formatter(val){val=val*100+'%';return val;}});chart.coordinate('theta',{radius:0.75,innerRadius:0.6});chart.tooltip({showTitle:false,showMarkers:false,itemTpl:'<li class=\"g2-tooltip-list-item\"><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value}</li>'});chart.annotation().text({position:['50%','50%'],content:\"Total Confirmed Cases\",style:{fontSize:14,fill:'#8c8c8c',textAlign:'center'},offsetY:-20}).text({position:['50%','50%'],content:props.innerChartTitle,style:{fontSize:20,fill:'#8c8c8c',textAlign:'center'},offsetX:-10,offsetY:20});chart.interval().adjust('stack').position('percent').color('item').tooltip('item*percent',function(item,percent){percent=percent*100+'%';return{name:item,value:percent};});chart.interaction('element-active');chart.render(true);}return/*#__PURE__*/React.createElement(React.Fragment,null);};export default DisplayPieChart;","map":{"version":3,"sources":["/Users/bobby/Desktop/Covid19_VisualizationReact/src/component/chart/pieChart.component.jsx"],"names":["React","Chart","DisplayPieChart","props","chartData","length","chart","container","autoFit","height","data","scale","formatter","val","coordinate","radius","innerRadius","tooltip","showTitle","showMarkers","itemTpl","annotation","text","position","content","style","fontSize","fill","textAlign","offsetY","innerChartTitle","offsetX","interval","adjust","color","item","percent","name","value","interaction","render"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,UAAtB,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAE/B,GAAIA,KAAK,CAACC,SAAN,EAAmBD,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAyB,CAAhD,CAAmD,CAC/C,GAAMC,CAAAA,KAAK,CAAG,GAAIL,CAAAA,KAAJ,CAAU,CACpBM,SAAS,CAAE,mBADS,CAEpBC,OAAO,CAAE,IAFW,CAGpBC,MAAM,CAAE,GAHY,CAAV,CAAd,CAMAH,KAAK,CAACI,IAAN,CAAWP,KAAK,CAACC,SAAjB,EACAE,KAAK,CAACK,KAAN,CAAY,SAAZ,CAAuB,CACnBC,SAAS,CAAE,mBAACC,GAAD,CAAS,CAChBA,GAAG,CAAGA,GAAG,CAAG,GAAN,CAAY,GAAlB,CACA,MAAOA,CAAAA,GAAP,CACH,CAJkB,CAAvB,EAMAP,KAAK,CAACQ,UAAN,CAAiB,OAAjB,CAA0B,CACtBC,MAAM,CAAE,IADc,CAEtBC,WAAW,CAAE,GAFS,CAA1B,EAIAV,KAAK,CAACW,OAAN,CAAc,CACVC,SAAS,CAAE,KADD,CAEVC,WAAW,CAAE,KAFH,CAGVC,OAAO,CAAE,gIAHC,CAAd,EAKAd,KAAK,CAACe,UAAN,GACKC,IADL,CACU,CACFC,QAAQ,CAAE,CAAC,KAAD,CAAQ,KAAR,CADR,CAEFC,OAAO,CAAE,uBAFP,CAGFC,KAAK,CAAE,CACHC,QAAQ,CAAE,EADP,CAEHC,IAAI,CAAE,SAFH,CAGHC,SAAS,CAAE,QAHR,CAHL,CAQFC,OAAO,CAAE,CAAC,EARR,CADV,EAWKP,IAXL,CAWU,CACFC,QAAQ,CAAE,CAAC,KAAD,CAAQ,KAAR,CADR,CAEFC,OAAO,CAAErB,KAAK,CAAC2B,eAFb,CAGFL,KAAK,CAAE,CACHC,QAAQ,CAAE,EADP,CAEHC,IAAI,CAAE,SAFH,CAGHC,SAAS,CAAE,QAHR,CAHL,CAQFG,OAAO,CAAE,CAAC,EARR,CASFF,OAAO,CAAE,EATP,CAXV,EAsBAvB,KAAK,CAAC0B,QAAN,GACKC,MADL,CACY,OADZ,EAEKV,QAFL,CAEc,SAFd,EAGKW,KAHL,CAGW,MAHX,EAIKjB,OAJL,CAIa,cAJb,CAI6B,SAACkB,IAAD,CAAOC,OAAP,CAAmB,CACxCA,OAAO,CAAGA,OAAO,CAAG,GAAV,CAAgB,GAA1B,CACA,MAAO,CACHC,IAAI,CAAEF,IADH,CAEHG,KAAK,CAAEF,OAFJ,CAAP,CAIH,CAVL,EAYA9B,KAAK,CAACiC,WAAN,CAAkB,gBAAlB,EACAjC,KAAK,CAACkC,MAAN,CAAa,IAAb,EACH,CACG,mBACI,wCADJ,CAGH,CAjEL,CAkEA,cAAetC,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { Chart } from '@antv/g2';\n\n\nconst DisplayPieChart = (props) => {\n\n    if (props.chartData && props.chartData.length > 0) {\n        const chart = new Chart({\n            container: 'containerPieChart',\n            autoFit: true,\n            height: 500,\n        });\n\n        chart.data(props.chartData);\n        chart.scale('percent', {\n            formatter: (val) => {\n                val = val * 100 + '%';\n                return val;\n            },\n        });\n        chart.coordinate('theta', {\n            radius: 0.75,\n            innerRadius: 0.6,\n        });\n        chart.tooltip({\n            showTitle: false,\n            showMarkers: false,\n            itemTpl: '<li class=\"g2-tooltip-list-item\"><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value}</li>',\n        });\n        chart.annotation()\n            .text({\n                position: ['50%', '50%'],\n                content: \"Total Confirmed Cases\",\n                style: {\n                    fontSize: 14,\n                    fill: '#8c8c8c',\n                    textAlign: 'center',\n                },\n                offsetY: -20,\n            })\n            .text({\n                position: ['50%', '50%'],\n                content: props.innerChartTitle,\n                style: {\n                    fontSize: 20,\n                    fill: '#8c8c8c',\n                    textAlign: 'center',\n                },\n                offsetX: -10,\n                offsetY: 20,\n            });\n        chart.interval()\n            .adjust('stack')\n            .position('percent')\n            .color('item')\n            .tooltip('item*percent', (item, percent) => {\n                percent = percent * 100 + '%';\n                return {\n                    name: item,\n                    value: percent,\n                };\n            });\n        \n        chart.interaction('element-active');\n        chart.render(true);\n    }\n        return (\n            <></>\n        );\n    }\nexport default DisplayPieChart;"]},"metadata":{},"sourceType":"module"}