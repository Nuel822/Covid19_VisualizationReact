{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, find, flatten, get, isArray, isEqual, isFunction, mix, isUndefined } from '@antv/util';\nimport { Crosshair, HtmlTooltip } from '../../dependents';\nimport { getAngleByPoint, getDistanceToCenter, isPointInCoordinate } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findDataByPoint, getTooltipItems } from '../../util/tooltip';\nimport { Controller } from './base'; // Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\n\nfunction uniq(items) {\n  var uniqItems = [];\n  each(items, function (item) {\n    var result = find(uniqItems, function (subItem) {\n      return subItem.color === item.color && subItem.name === item.name && subItem.value === item.value && subItem.title === item.title;\n    });\n\n    if (!result) {\n      uniqItems.push(item);\n    }\n  });\n  return uniqItems;\n}\n/** @ignore */\n\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip, _super);\n\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isLocked = false;\n    _this.isVisible = true;\n    return _this;\n  }\n\n  Object.defineProperty(Tooltip.prototype, \"name\", {\n    get: function get() {\n      return 'tooltip';\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Tooltip.prototype.init = function () {};\n\n  Tooltip.prototype.render = function () {\n    var option = this.view.getOptions().tooltip;\n    this.isVisible = option !== false;\n  };\n  /**\n   * Shows tooltip\n   * @param point\n   */\n\n\n  Tooltip.prototype.showTooltip = function (point) {\n    if (!this.isVisible) {\n      // 如果设置 tooltip(false) 则始终不显示\n      return;\n    }\n\n    var view = this.view;\n    var items = this.getTooltipItems(point);\n\n    if (!items.length) {\n      // 无内容则不展示，同时 tooltip 需要隐藏\n      this.hideTooltip();\n      return;\n    }\n\n    var title = this.getTitle(items);\n    var dataPoint = {\n      x: items[0].x,\n      y: items[0].y\n    }; // 数据点位置\n\n    view.emit('tooltip:show', __assign({\n      items: items,\n      title: title\n    }, point));\n    var cfg = this.getTooltipCfg();\n    var follow = cfg.follow,\n        showMarkers = cfg.showMarkers,\n        showCrosshairs = cfg.showCrosshairs,\n        showContent = cfg.showContent,\n        marker = cfg.marker;\n    var lastItems = this.items;\n    var lastTitle = this.title;\n\n    if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n      // 内容发生变化了更新 tooltip\n      view.emit('tooltip:change', __assign({\n        items: items,\n        title: title\n      }, point));\n\n      if (showContent) {\n        // 展示 tooltip 内容框才渲染 tooltip\n        if (!this.tooltip) {\n          // 延迟生成\n          this.renderTooltip();\n        }\n\n        this.tooltip.update(mix({}, cfg, {\n          items: items,\n          title: title\n        }, follow ? point : dataPoint));\n        this.tooltip.show();\n      }\n\n      if (showMarkers) {\n        // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n        this.renderTooltipMarkers(items, marker);\n      }\n    } else {\n      // 内容未发生变化，则更新位置\n      if (this.tooltip) {\n        var newPoint = follow ? point : dataPoint;\n        this.tooltip.update(newPoint);\n        this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n      }\n\n      if (this.tooltipMarkersGroup) {\n        this.tooltipMarkersGroup.show();\n      }\n    }\n\n    this.items = items;\n    this.title = title;\n\n    if (showCrosshairs) {\n      // 展示 tooltip 辅助线\n      var isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n\n      this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n    }\n  };\n\n  Tooltip.prototype.hideTooltip = function () {\n    // hide the tooltipMarkers\n    var tooltipMarkersGroup = this.tooltipMarkersGroup;\n\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.hide();\n    } // hide crosshairs\n\n\n    var xCrosshair = this.xCrosshair;\n    var yCrosshair = this.yCrosshair;\n\n    if (xCrosshair) {\n      xCrosshair.hide();\n    }\n\n    if (yCrosshair) {\n      yCrosshair.hide();\n    }\n\n    var tooltip = this.tooltip;\n\n    if (tooltip) {\n      tooltip.hide();\n    }\n\n    this.view.emit('tooltip:hide', {});\n  };\n  /**\n   * lockTooltip\n   */\n\n\n  Tooltip.prototype.lockTooltip = function () {\n    this.isLocked = true;\n\n    if (this.tooltip) {\n      // tooltip contianer 可捕获事件\n      this.tooltip.setCapture(true);\n    }\n  };\n  /**\n   * unlockTooltip\n   */\n\n\n  Tooltip.prototype.unlockTooltip = function () {\n    this.isLocked = false;\n    var cfg = this.getTooltipCfg();\n\n    if (this.tooltip) {\n      // 重置 capture 属性\n      this.tooltip.setCapture(cfg.capture);\n    }\n  };\n  /**\n   * isTooltipLocked\n   */\n\n\n  Tooltip.prototype.isTooltipLocked = function () {\n    return this.isLocked;\n  };\n\n  Tooltip.prototype.clear = function () {\n    var _a = this,\n        tooltip = _a.tooltip,\n        xCrosshair = _a.xCrosshair,\n        yCrosshair = _a.yCrosshair,\n        tooltipMarkersGroup = _a.tooltipMarkersGroup;\n\n    if (tooltip) {\n      tooltip.hide();\n      tooltip.clear();\n    }\n\n    if (xCrosshair) {\n      xCrosshair.clear();\n    }\n\n    if (yCrosshair) {\n      yCrosshair.clear();\n    }\n\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.clear();\n    }\n  };\n\n  Tooltip.prototype.destroy = function () {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n\n    if (this.xCrosshair) {\n      this.xCrosshair.destroy();\n    }\n\n    if (this.yCrosshair) {\n      this.yCrosshair.destroy();\n    }\n\n    if (this.guideGroup) {\n      this.guideGroup.remove(true);\n    }\n\n    this.items = null;\n    this.title = null;\n    this.tooltipMarkersGroup = null;\n    this.tooltipCrosshairsGroup = null;\n    this.xCrosshair = null;\n    this.yCrosshair = null;\n    this.tooltip = null;\n    this.guideGroup = null;\n    this.isLocked = false;\n  };\n\n  Tooltip.prototype.changeVisible = function (visible) {\n    if (this.visible === visible) {\n      return;\n    }\n\n    var _a = this,\n        tooltip = _a.tooltip,\n        tooltipMarkersGroup = _a.tooltipMarkersGroup,\n        xCrosshair = _a.xCrosshair,\n        yCrosshair = _a.yCrosshair;\n\n    if (visible) {\n      if (tooltip) {\n        tooltip.show();\n      }\n\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.show();\n      }\n\n      if (xCrosshair) {\n        xCrosshair.show();\n      }\n\n      if (yCrosshair) {\n        yCrosshair.show();\n      }\n    } else {\n      if (tooltip) {\n        tooltip.hide();\n      }\n\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.hide();\n      }\n\n      if (xCrosshair) {\n        xCrosshair.hide();\n      }\n\n      if (yCrosshair) {\n        yCrosshair.hide();\n      }\n    }\n\n    this.visible = visible;\n  };\n\n  Tooltip.prototype.getTooltipItems = function (point) {\n    var items = this.findItemsFromView(this.view, point);\n\n    if (items.length) {\n      // 三层\n      items = flatten(items);\n      each(items, function (itemArr) {\n        each(itemArr, function (item) {\n          var _a = item.mappingData,\n              x = _a.x,\n              y = _a.y;\n          item.x = isArray(x) ? x[x.length - 1] : x;\n          item.y = isArray(y) ? y[y.length - 1] : y;\n        });\n      });\n      var shared = this.getTooltipCfg().shared; // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n\n      if (shared === false && items.length > 1) {\n        var snapItem_1 = items[0];\n        var min_1 = Math.abs(point.y - snapItem_1[0].y);\n        each(items, function (aItem) {\n          var yDistance = Math.abs(point.y - aItem[0].y);\n\n          if (yDistance <= min_1) {\n            snapItem_1 = aItem;\n            min_1 = yDistance;\n          }\n        });\n        items = [snapItem_1];\n      }\n\n      return uniq(flatten(items));\n    }\n\n    return [];\n  };\n\n  Tooltip.prototype.layout = function () {};\n\n  Tooltip.prototype.update = function () {\n    this.clear();\n  }; // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n\n\n  Tooltip.prototype.getTooltipCfg = function () {\n    var view = this.view;\n    var option = view.getOptions().tooltip;\n    var theme = view.getTheme();\n    var defaultCfg = get(theme, ['components', 'tooltip'], {});\n    var enterable = isUndefined(get(option, 'enterable')) ? defaultCfg.enterable : get(option, 'enterable');\n    return deepMix({}, defaultCfg, option, {\n      capture: enterable || this.isLocked ? true : false\n    });\n  };\n\n  Tooltip.prototype.getTitle = function (items) {\n    var title = items[0].title || items[0].name;\n    this.title = title;\n    return title;\n  };\n\n  Tooltip.prototype.renderTooltip = function () {\n    var canvas = this.view.getCanvas();\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var cfg = this.getTooltipCfg();\n    var tooltip = new HtmlTooltip(__assign(__assign({\n      parent: canvas.get('el').parentNode,\n      region: region\n    }, cfg), {\n      visible: false,\n      crosshairs: null\n    }));\n    tooltip.init();\n    this.tooltip = tooltip;\n  };\n\n  Tooltip.prototype.renderTooltipMarkers = function (items, marker) {\n    var tooltipMarkersGroup = this.getTooltipMarkersGroup();\n    each(items, function (item) {\n      var x = item.x,\n          y = item.y;\n\n      var attrs = __assign(__assign({\n        fill: item.color,\n        symbol: 'circle',\n        shadowColor: item.color\n      }, marker), {\n        x: x,\n        y: y\n      });\n\n      tooltipMarkersGroup.addShape('marker', {\n        attrs: attrs\n      });\n    });\n  };\n\n  Tooltip.prototype.renderCrosshairs = function (point, cfg) {\n    var crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n\n    if (crosshairsType === 'x') {\n      if (this.yCrosshair) {\n        this.yCrosshair.hide();\n      }\n\n      this.renderXCrosshairs(point, cfg);\n    } else if (crosshairsType === 'y') {\n      if (this.xCrosshair) {\n        this.xCrosshair.hide();\n      }\n\n      this.renderYCrosshairs(point, cfg);\n    } else if (crosshairsType === 'xy') {\n      this.renderXCrosshairs(point, cfg);\n      this.renderYCrosshairs(point, cfg);\n    }\n  }; // 渲染 x 轴上的 tooltip 辅助线\n\n\n  Tooltip.prototype.renderXCrosshairs = function (point, tooltipCfg) {\n    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n\n    if (!isPointInCoordinate(coordinate, point)) {\n      return;\n    }\n\n    var start;\n    var end;\n\n    if (coordinate.isRect) {\n      if (coordinate.isTransposed) {\n        start = {\n          x: coordinate.start.x,\n          y: point.y\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y\n        };\n      } else {\n        start = {\n          x: point.x,\n          y: coordinate.end.y\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y\n        };\n      }\n    } else {\n      // 极坐标下 x 轴上的 crosshairs 表现为半径\n      var angle = getAngleByPoint(coordinate, point);\n      var center = coordinate.getCenter();\n      var radius = coordinate.getRadius();\n      end = polarToCartesian(center.x, center.y, radius, angle);\n      start = center;\n    }\n\n    var cfg = deepMix({\n      start: start,\n      end: end,\n      container: this.getTooltipCrosshairsGroup()\n    }, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('x', point, tooltipCfg));\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    var xCrosshair = this.xCrosshair;\n\n    if (xCrosshair) {\n      xCrosshair.update(cfg);\n    } else {\n      xCrosshair = new Crosshair.Line(cfg);\n      xCrosshair.init();\n    }\n\n    xCrosshair.render();\n    xCrosshair.show();\n    this.xCrosshair = xCrosshair;\n  }; // 渲染 y 轴上的辅助线\n\n\n  Tooltip.prototype.renderYCrosshairs = function (point, tooltipCfg) {\n    var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n\n    if (!isPointInCoordinate(coordinate, point)) {\n      return;\n    }\n\n    var cfg;\n    var type;\n\n    if (coordinate.isRect) {\n      var start = void 0;\n      var end = void 0;\n\n      if (coordinate.isTransposed) {\n        start = {\n          x: point.x,\n          y: coordinate.end.y\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y\n        };\n      } else {\n        start = {\n          x: coordinate.start.x,\n          y: point.y\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y\n        };\n      }\n\n      cfg = {\n        start: start,\n        end: end\n      };\n      type = 'Line';\n    } else {\n      // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n      cfg = {\n        center: coordinate.getCenter(),\n        // @ts-ignore\n        radius: getDistanceToCenter(coordinate, point),\n        startAngle: coordinate.startAngle,\n        endAngle: coordinate.endAngle\n      };\n      type = 'Circle';\n    }\n\n    cfg = deepMix({\n      container: this.getTooltipCrosshairsGroup()\n    }, cfg, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('y', point, tooltipCfg));\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    var yCrosshair = this.yCrosshair;\n\n    if (yCrosshair) {\n      // 如果坐标系发生直角坐标系与极坐标的切换操作\n      if (coordinate.isRect && yCrosshair.get('type') === 'circle' || !coordinate.isRect && yCrosshair.get('type') === 'line') {\n        yCrosshair = new Crosshair[type](cfg);\n        yCrosshair.init();\n      } else {\n        yCrosshair.update(cfg);\n      }\n    } else {\n      yCrosshair = new Crosshair[type](cfg);\n      yCrosshair.init();\n    }\n\n    yCrosshair.render();\n    yCrosshair.show();\n    this.yCrosshair = yCrosshair;\n  };\n\n  Tooltip.prototype.getCrosshairsText = function (type, point, tooltipCfg) {\n    var textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n    var follow = get(tooltipCfg, ['crosshairs', 'follow']);\n    var items = this.items;\n\n    if (textCfg) {\n      var view = this.getViewWithGeometry(this.view); // 需要展示文本\n\n      var firstItem = items[0];\n      var xScale = view.getXScale();\n      var yScale = view.getYScales()[0];\n      var xValue = void 0;\n      var yValue = void 0;\n\n      if (follow) {\n        // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n        var invertPoint = this.view.getCoordinate().invert(point);\n        xValue = xScale.invert(invertPoint.x); // 转换为原始值\n\n        yValue = yScale.invert(invertPoint.y); // 转换为原始值\n      } else {\n        xValue = firstItem.data[xScale.field];\n        yValue = firstItem.data[yScale.field];\n      }\n\n      var content = type === 'x' ? xValue : yValue;\n\n      if (isFunction(textCfg)) {\n        textCfg = textCfg(type, content, items, point);\n      } else {\n        textCfg.content = content;\n      }\n\n      return {\n        text: textCfg\n      };\n    }\n  }; // 获取存储 tooltipMarkers 和 crosshairs 的容器\n\n\n  Tooltip.prototype.getGuideGroup = function () {\n    if (!this.guideGroup) {\n      var foregroundGroup = this.view.foregroundGroup;\n      this.guideGroup = foregroundGroup.addGroup({\n        name: 'tooltipGuide',\n        capture: false\n      });\n    }\n\n    return this.guideGroup;\n  }; // 获取 tooltipMarkers 存储的容器\n\n\n  Tooltip.prototype.getTooltipMarkersGroup = function () {\n    var tooltipMarkersGroup = this.tooltipMarkersGroup;\n\n    if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n      tooltipMarkersGroup.clear();\n      tooltipMarkersGroup.show();\n    } else {\n      tooltipMarkersGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipMarkersGroup'\n      });\n      tooltipMarkersGroup.toFront();\n      this.tooltipMarkersGroup = tooltipMarkersGroup;\n    }\n\n    return tooltipMarkersGroup;\n  }; // 获取 tooltip crosshairs 存储的容器\n\n\n  Tooltip.prototype.getTooltipCrosshairsGroup = function () {\n    var tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n\n    if (!tooltipCrosshairsGroup) {\n      tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipCrosshairsGroup',\n        capture: false\n      });\n      tooltipCrosshairsGroup.toBack();\n      this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n    }\n\n    return tooltipCrosshairsGroup;\n  };\n\n  Tooltip.prototype.getTooltipItemsByHitShape = function (geometry, point, title) {\n    var result = [];\n    var container = geometry.container;\n    var shape = container.getShape(point.x, point.y);\n\n    if (shape && shape.get('visible') && shape.get('origin')) {\n      var mappingData = shape.get('origin').mappingData;\n      var items = getTooltipItems(mappingData, geometry, title);\n\n      if (items.length) {\n        result.push(items);\n      }\n    }\n\n    return result;\n  };\n\n  Tooltip.prototype.getTooltipItemsByFindData = function (geometry, point, title) {\n    var result = [];\n    each(geometry.dataArray, function (data) {\n      var record = findDataByPoint(point, data, geometry);\n\n      if (record) {\n        var elementId = geometry.getElementId(record);\n        var element = geometry.elementsMap[elementId];\n\n        if (geometry.type === 'heatmap' || element.visible) {\n          // Heatmap 没有 Element\n          // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据\n          var items = getTooltipItems(record, geometry, title);\n\n          if (items.length) {\n            result.push(items);\n          }\n        }\n      }\n    });\n    return result;\n  };\n\n  Tooltip.prototype.findItemsFromView = function (view, point) {\n    var _this = this;\n\n    if (view.getOptions().tooltip === false) {\n      // 如果 view 关闭了 tooltip\n      return [];\n    }\n\n    var result = []; // 先从 view 本身查找\n\n    var geometries = view.geometries;\n\n    var _a = this.getTooltipCfg(),\n        shared = _a.shared,\n        title = _a.title;\n\n    each(geometries, function (geometry) {\n      if (geometry.visible && geometry.tooltipOption !== false) {\n        // geometry 可见同时未关闭 tooltip\n        var geometryType = geometry.type;\n        var tooltipItems = void 0;\n\n        if (['point', 'edge', 'polygon'].includes(geometryType)) {\n          // 始终通过图形拾取\n          tooltipItems = _this.getTooltipItemsByHitShape(geometry, point, title);\n        } else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {\n          // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip\n          tooltipItems = _this.getTooltipItemsByFindData(geometry, point, title);\n        } else {\n          if (shared !== false) {\n            tooltipItems = _this.getTooltipItemsByFindData(geometry, point, title);\n          } else {\n            tooltipItems = _this.getTooltipItemsByHitShape(geometry, point, title);\n          }\n        }\n\n        if (tooltipItems.length) {\n          // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')\n          result.push(tooltipItems);\n        }\n      }\n    }); // 递归查找，并合并结果\n\n    each(view.views, function (childView) {\n      result = result.concat(_this.findItemsFromView(childView, point));\n    });\n    return result;\n  }; // FIXME: hack 方法\n  // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n\n\n  Tooltip.prototype.getViewWithGeometry = function (view) {\n    var _this = this;\n\n    if (view.geometries.length) {\n      return view;\n    }\n\n    return find(view.views, function (childView) {\n      return _this.getViewWithGeometry(childView);\n    });\n  };\n\n  return Tooltip;\n}(Controller);\n\nexport default Tooltip;","map":{"version":3,"sources":["../../../src/chart/controller/tooltip.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, find, flatten, get, isArray, isEqual, isFunction, mix, isUndefined } from '@antv/util';\nimport { Crosshair, HtmlTooltip } from '../../dependents';\nimport { getAngleByPoint, getDistanceToCenter, isPointInCoordinate } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findDataByPoint, getTooltipItems } from '../../util/tooltip';\nimport { Controller } from './base';\n// Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\nfunction uniq(items) {\n    var uniqItems = [];\n    each(items, function (item) {\n        var result = find(uniqItems, function (subItem) {\n            return (subItem.color === item.color &&\n                subItem.name === item.name &&\n                subItem.value === item.value &&\n                subItem.title === item.title);\n        });\n        if (!result) {\n            uniqItems.push(item);\n        }\n    });\n    return uniqItems;\n}\n/** @ignore */\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isLocked = false;\n        _this.isVisible = true;\n        return _this;\n    }\n    Object.defineProperty(Tooltip.prototype, \"name\", {\n        get: function () {\n            return 'tooltip';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tooltip.prototype.init = function () { };\n    Tooltip.prototype.render = function () {\n        var option = this.view.getOptions().tooltip;\n        this.isVisible = option !== false;\n    };\n    /**\n     * Shows tooltip\n     * @param point\n     */\n    Tooltip.prototype.showTooltip = function (point) {\n        if (!this.isVisible) { // 如果设置 tooltip(false) 则始终不显示\n            return;\n        }\n        var view = this.view;\n        var items = this.getTooltipItems(point);\n        if (!items.length) {\n            // 无内容则不展示，同时 tooltip 需要隐藏\n            this.hideTooltip();\n            return;\n        }\n        var title = this.getTitle(items);\n        var dataPoint = {\n            x: items[0].x,\n            y: items[0].y,\n        }; // 数据点位置\n        view.emit('tooltip:show', __assign({ items: items,\n            title: title }, point));\n        var cfg = this.getTooltipCfg();\n        var follow = cfg.follow, showMarkers = cfg.showMarkers, showCrosshairs = cfg.showCrosshairs, showContent = cfg.showContent, marker = cfg.marker;\n        var lastItems = this.items;\n        var lastTitle = this.title;\n        if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n            // 内容发生变化了更新 tooltip\n            view.emit('tooltip:change', __assign({ items: items,\n                title: title }, point));\n            if (showContent) {\n                // 展示 tooltip 内容框才渲染 tooltip\n                if (!this.tooltip) {\n                    // 延迟生成\n                    this.renderTooltip();\n                }\n                this.tooltip.update(mix({}, cfg, {\n                    items: items,\n                    title: title,\n                }, follow ? point : dataPoint));\n                this.tooltip.show();\n            }\n            if (showMarkers) {\n                // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n                this.renderTooltipMarkers(items, marker);\n            }\n        }\n        else {\n            // 内容未发生变化，则更新位置\n            if (this.tooltip) {\n                var newPoint = follow ? point : dataPoint;\n                this.tooltip.update(newPoint);\n                this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n            }\n            if (this.tooltipMarkersGroup) {\n                this.tooltipMarkersGroup.show();\n            }\n        }\n        this.items = items;\n        this.title = title;\n        if (showCrosshairs) {\n            // 展示 tooltip 辅助线\n            var isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n            this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n        }\n    };\n    Tooltip.prototype.hideTooltip = function () {\n        // hide the tooltipMarkers\n        var tooltipMarkersGroup = this.tooltipMarkersGroup;\n        if (tooltipMarkersGroup) {\n            tooltipMarkersGroup.hide();\n        }\n        // hide crosshairs\n        var xCrosshair = this.xCrosshair;\n        var yCrosshair = this.yCrosshair;\n        if (xCrosshair) {\n            xCrosshair.hide();\n        }\n        if (yCrosshair) {\n            yCrosshair.hide();\n        }\n        var tooltip = this.tooltip;\n        if (tooltip) {\n            tooltip.hide();\n        }\n        this.view.emit('tooltip:hide', {});\n    };\n    /**\n     * lockTooltip\n     */\n    Tooltip.prototype.lockTooltip = function () {\n        this.isLocked = true;\n        if (this.tooltip) {\n            // tooltip contianer 可捕获事件\n            this.tooltip.setCapture(true);\n        }\n    };\n    /**\n     * unlockTooltip\n     */\n    Tooltip.prototype.unlockTooltip = function () {\n        this.isLocked = false;\n        var cfg = this.getTooltipCfg();\n        if (this.tooltip) {\n            // 重置 capture 属性\n            this.tooltip.setCapture(cfg.capture);\n        }\n    };\n    /**\n     * isTooltipLocked\n     */\n    Tooltip.prototype.isTooltipLocked = function () {\n        return this.isLocked;\n    };\n    Tooltip.prototype.clear = function () {\n        var _a = this, tooltip = _a.tooltip, xCrosshair = _a.xCrosshair, yCrosshair = _a.yCrosshair, tooltipMarkersGroup = _a.tooltipMarkersGroup;\n        if (tooltip) {\n            tooltip.hide();\n            tooltip.clear();\n        }\n        if (xCrosshair) {\n            xCrosshair.clear();\n        }\n        if (yCrosshair) {\n            yCrosshair.clear();\n        }\n        if (tooltipMarkersGroup) {\n            tooltipMarkersGroup.clear();\n        }\n    };\n    Tooltip.prototype.destroy = function () {\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        if (this.xCrosshair) {\n            this.xCrosshair.destroy();\n        }\n        if (this.yCrosshair) {\n            this.yCrosshair.destroy();\n        }\n        if (this.guideGroup) {\n            this.guideGroup.remove(true);\n        }\n        this.items = null;\n        this.title = null;\n        this.tooltipMarkersGroup = null;\n        this.tooltipCrosshairsGroup = null;\n        this.xCrosshair = null;\n        this.yCrosshair = null;\n        this.tooltip = null;\n        this.guideGroup = null;\n        this.isLocked = false;\n    };\n    Tooltip.prototype.changeVisible = function (visible) {\n        if (this.visible === visible) {\n            return;\n        }\n        var _a = this, tooltip = _a.tooltip, tooltipMarkersGroup = _a.tooltipMarkersGroup, xCrosshair = _a.xCrosshair, yCrosshair = _a.yCrosshair;\n        if (visible) {\n            if (tooltip) {\n                tooltip.show();\n            }\n            if (tooltipMarkersGroup) {\n                tooltipMarkersGroup.show();\n            }\n            if (xCrosshair) {\n                xCrosshair.show();\n            }\n            if (yCrosshair) {\n                yCrosshair.show();\n            }\n        }\n        else {\n            if (tooltip) {\n                tooltip.hide();\n            }\n            if (tooltipMarkersGroup) {\n                tooltipMarkersGroup.hide();\n            }\n            if (xCrosshair) {\n                xCrosshair.hide();\n            }\n            if (yCrosshair) {\n                yCrosshair.hide();\n            }\n        }\n        this.visible = visible;\n    };\n    Tooltip.prototype.getTooltipItems = function (point) {\n        var items = this.findItemsFromView(this.view, point);\n        if (items.length) {\n            // 三层\n            items = flatten(items);\n            each(items, function (itemArr) {\n                each(itemArr, function (item) {\n                    var _a = item.mappingData, x = _a.x, y = _a.y;\n                    item.x = isArray(x) ? x[x.length - 1] : x;\n                    item.y = isArray(y) ? y[y.length - 1] : y;\n                });\n            });\n            var shared = this.getTooltipCfg().shared;\n            // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n            if (shared === false && items.length > 1) {\n                var snapItem_1 = items[0];\n                var min_1 = Math.abs(point.y - snapItem_1[0].y);\n                each(items, function (aItem) {\n                    var yDistance = Math.abs(point.y - aItem[0].y);\n                    if (yDistance <= min_1) {\n                        snapItem_1 = aItem;\n                        min_1 = yDistance;\n                    }\n                });\n                items = [snapItem_1];\n            }\n            return uniq(flatten(items));\n        }\n        return [];\n    };\n    Tooltip.prototype.layout = function () { };\n    Tooltip.prototype.update = function () {\n        this.clear();\n    };\n    // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n    Tooltip.prototype.getTooltipCfg = function () {\n        var view = this.view;\n        var option = view.getOptions().tooltip;\n        var theme = view.getTheme();\n        var defaultCfg = get(theme, ['components', 'tooltip'], {});\n        var enterable = isUndefined(get(option, 'enterable')) ? defaultCfg.enterable : get(option, 'enterable');\n        return deepMix({}, defaultCfg, option, {\n            capture: enterable || this.isLocked ? true : false,\n        });\n    };\n    Tooltip.prototype.getTitle = function (items) {\n        var title = items[0].title || items[0].name;\n        this.title = title;\n        return title;\n    };\n    Tooltip.prototype.renderTooltip = function () {\n        var canvas = this.view.getCanvas();\n        var region = {\n            start: { x: 0, y: 0 },\n            end: { x: canvas.get('width'), y: canvas.get('height') },\n        };\n        var cfg = this.getTooltipCfg();\n        var tooltip = new HtmlTooltip(__assign(__assign({ parent: canvas.get('el').parentNode, region: region }, cfg), { visible: false, crosshairs: null }));\n        tooltip.init();\n        this.tooltip = tooltip;\n    };\n    Tooltip.prototype.renderTooltipMarkers = function (items, marker) {\n        var tooltipMarkersGroup = this.getTooltipMarkersGroup();\n        each(items, function (item) {\n            var x = item.x, y = item.y;\n            var attrs = __assign(__assign({ fill: item.color, symbol: 'circle', shadowColor: item.color }, marker), { x: x,\n                y: y });\n            tooltipMarkersGroup.addShape('marker', {\n                attrs: attrs,\n            });\n        });\n    };\n    Tooltip.prototype.renderCrosshairs = function (point, cfg) {\n        var crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n        if (crosshairsType === 'x') {\n            if (this.yCrosshair) {\n                this.yCrosshair.hide();\n            }\n            this.renderXCrosshairs(point, cfg);\n        }\n        else if (crosshairsType === 'y') {\n            if (this.xCrosshair) {\n                this.xCrosshair.hide();\n            }\n            this.renderYCrosshairs(point, cfg);\n        }\n        else if (crosshairsType === 'xy') {\n            this.renderXCrosshairs(point, cfg);\n            this.renderYCrosshairs(point, cfg);\n        }\n    };\n    // 渲染 x 轴上的 tooltip 辅助线\n    Tooltip.prototype.renderXCrosshairs = function (point, tooltipCfg) {\n        var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n        if (!isPointInCoordinate(coordinate, point)) {\n            return;\n        }\n        var start;\n        var end;\n        if (coordinate.isRect) {\n            if (coordinate.isTransposed) {\n                start = {\n                    x: coordinate.start.x,\n                    y: point.y,\n                };\n                end = {\n                    x: coordinate.end.x,\n                    y: point.y,\n                };\n            }\n            else {\n                start = {\n                    x: point.x,\n                    y: coordinate.end.y,\n                };\n                end = {\n                    x: point.x,\n                    y: coordinate.start.y,\n                };\n            }\n        }\n        else {\n            // 极坐标下 x 轴上的 crosshairs 表现为半径\n            var angle = getAngleByPoint(coordinate, point);\n            var center = coordinate.getCenter();\n            var radius = coordinate.getRadius();\n            end = polarToCartesian(center.x, center.y, radius, angle);\n            start = center;\n        }\n        var cfg = deepMix({\n            start: start,\n            end: end,\n            container: this.getTooltipCrosshairsGroup(),\n        }, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('x', point, tooltipCfg));\n        delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n        var xCrosshair = this.xCrosshair;\n        if (xCrosshair) {\n            xCrosshair.update(cfg);\n        }\n        else {\n            xCrosshair = new Crosshair.Line(cfg);\n            xCrosshair.init();\n        }\n        xCrosshair.render();\n        xCrosshair.show();\n        this.xCrosshair = xCrosshair;\n    };\n    // 渲染 y 轴上的辅助线\n    Tooltip.prototype.renderYCrosshairs = function (point, tooltipCfg) {\n        var coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n        if (!isPointInCoordinate(coordinate, point)) {\n            return;\n        }\n        var cfg;\n        var type;\n        if (coordinate.isRect) {\n            var start = void 0;\n            var end = void 0;\n            if (coordinate.isTransposed) {\n                start = {\n                    x: point.x,\n                    y: coordinate.end.y,\n                };\n                end = {\n                    x: point.x,\n                    y: coordinate.start.y,\n                };\n            }\n            else {\n                start = {\n                    x: coordinate.start.x,\n                    y: point.y,\n                };\n                end = {\n                    x: coordinate.end.x,\n                    y: point.y,\n                };\n            }\n            cfg = {\n                start: start,\n                end: end,\n            };\n            type = 'Line';\n        }\n        else {\n            // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n            cfg = {\n                center: coordinate.getCenter(),\n                // @ts-ignore\n                radius: getDistanceToCenter(coordinate, point),\n                startAngle: coordinate.startAngle,\n                endAngle: coordinate.endAngle,\n            };\n            type = 'Circle';\n        }\n        cfg = deepMix({\n            container: this.getTooltipCrosshairsGroup()\n        }, cfg, get(tooltipCfg, 'crosshairs', {}), this.getCrosshairsText('y', point, tooltipCfg));\n        delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n        var yCrosshair = this.yCrosshair;\n        if (yCrosshair) {\n            // 如果坐标系发生直角坐标系与极坐标的切换操作\n            if ((coordinate.isRect && yCrosshair.get('type') === 'circle')\n                || (!coordinate.isRect && yCrosshair.get('type') === 'line')) {\n                yCrosshair = new Crosshair[type](cfg);\n                yCrosshair.init();\n            }\n            else {\n                yCrosshair.update(cfg);\n            }\n        }\n        else {\n            yCrosshair = new Crosshair[type](cfg);\n            yCrosshair.init();\n        }\n        yCrosshair.render();\n        yCrosshair.show();\n        this.yCrosshair = yCrosshair;\n    };\n    Tooltip.prototype.getCrosshairsText = function (type, point, tooltipCfg) {\n        var textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n        var follow = get(tooltipCfg, ['crosshairs', 'follow']);\n        var items = this.items;\n        if (textCfg) {\n            var view = this.getViewWithGeometry(this.view);\n            // 需要展示文本\n            var firstItem = items[0];\n            var xScale = view.getXScale();\n            var yScale = view.getYScales()[0];\n            var xValue = void 0;\n            var yValue = void 0;\n            if (follow) {\n                // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n                var invertPoint = this.view.getCoordinate().invert(point);\n                xValue = xScale.invert(invertPoint.x); // 转换为原始值\n                yValue = yScale.invert(invertPoint.y); // 转换为原始值\n            }\n            else {\n                xValue = firstItem.data[xScale.field];\n                yValue = firstItem.data[yScale.field];\n            }\n            var content = type === 'x' ? xValue : yValue;\n            if (isFunction(textCfg)) {\n                textCfg = textCfg(type, content, items, point);\n            }\n            else {\n                textCfg.content = content;\n            }\n            return {\n                text: textCfg,\n            };\n        }\n    };\n    // 获取存储 tooltipMarkers 和 crosshairs 的容器\n    Tooltip.prototype.getGuideGroup = function () {\n        if (!this.guideGroup) {\n            var foregroundGroup = this.view.foregroundGroup;\n            this.guideGroup = foregroundGroup.addGroup({\n                name: 'tooltipGuide',\n                capture: false,\n            });\n        }\n        return this.guideGroup;\n    };\n    // 获取 tooltipMarkers 存储的容器\n    Tooltip.prototype.getTooltipMarkersGroup = function () {\n        var tooltipMarkersGroup = this.tooltipMarkersGroup;\n        if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n            tooltipMarkersGroup.clear();\n            tooltipMarkersGroup.show();\n        }\n        else {\n            tooltipMarkersGroup = this.getGuideGroup().addGroup({\n                name: 'tooltipMarkersGroup',\n            });\n            tooltipMarkersGroup.toFront();\n            this.tooltipMarkersGroup = tooltipMarkersGroup;\n        }\n        return tooltipMarkersGroup;\n    };\n    // 获取 tooltip crosshairs 存储的容器\n    Tooltip.prototype.getTooltipCrosshairsGroup = function () {\n        var tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n        if (!tooltipCrosshairsGroup) {\n            tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n                name: 'tooltipCrosshairsGroup',\n                capture: false,\n            });\n            tooltipCrosshairsGroup.toBack();\n            this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n        }\n        return tooltipCrosshairsGroup;\n    };\n    Tooltip.prototype.getTooltipItemsByHitShape = function (geometry, point, title) {\n        var result = [];\n        var container = geometry.container;\n        var shape = container.getShape(point.x, point.y);\n        if (shape && shape.get('visible') && shape.get('origin')) {\n            var mappingData = shape.get('origin').mappingData;\n            var items = getTooltipItems(mappingData, geometry, title);\n            if (items.length) {\n                result.push(items);\n            }\n        }\n        return result;\n    };\n    Tooltip.prototype.getTooltipItemsByFindData = function (geometry, point, title) {\n        var result = [];\n        each(geometry.dataArray, function (data) {\n            var record = findDataByPoint(point, data, geometry);\n            if (record) {\n                var elementId = geometry.getElementId(record);\n                var element = geometry.elementsMap[elementId];\n                if (geometry.type === 'heatmap' || element.visible) {\n                    // Heatmap 没有 Element\n                    // 如果图形元素隐藏了，怎不再 tooltip 上展示相关数据\n                    var items = getTooltipItems(record, geometry, title);\n                    if (items.length) {\n                        result.push(items);\n                    }\n                }\n            }\n        });\n        return result;\n    };\n    Tooltip.prototype.findItemsFromView = function (view, point) {\n        var _this = this;\n        if (view.getOptions().tooltip === false) {\n            // 如果 view 关闭了 tooltip\n            return [];\n        }\n        var result = [];\n        // 先从 view 本身查找\n        var geometries = view.geometries;\n        var _a = this.getTooltipCfg(), shared = _a.shared, title = _a.title;\n        each(geometries, function (geometry) {\n            if (geometry.visible && geometry.tooltipOption !== false) {\n                // geometry 可见同时未关闭 tooltip\n                var geometryType = geometry.type;\n                var tooltipItems = void 0;\n                if (['point', 'edge', 'polygon'].includes(geometryType)) {\n                    // 始终通过图形拾取\n                    tooltipItems = _this.getTooltipItemsByHitShape(geometry, point, title);\n                }\n                else if (['area', 'line', 'path', 'heatmap'].includes(geometryType)) {\n                    // 如果是 'area', 'line', 'path'，始终通过数据查找方法查找 tooltip\n                    tooltipItems = _this.getTooltipItemsByFindData(geometry, point, title);\n                }\n                else {\n                    if (shared !== false) {\n                        tooltipItems = _this.getTooltipItemsByFindData(geometry, point, title);\n                    }\n                    else {\n                        tooltipItems = _this.getTooltipItemsByHitShape(geometry, point, title);\n                    }\n                }\n                if (tooltipItems.length) {\n                    // geometry 有可能会有多个 item，因为用户可以设置 geometry.tooltip('x*y*z')\n                    result.push(tooltipItems);\n                }\n            }\n        });\n        // 递归查找，并合并结果\n        each(view.views, function (childView) {\n            result = result.concat(_this.findItemsFromView(childView, point));\n        });\n        return result;\n    };\n    // FIXME: hack 方法\n    // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n    Tooltip.prototype.getViewWithGeometry = function (view) {\n        var _this = this;\n        if (view.geometries.length) {\n            return view;\n        }\n        return find(view.views, function (childView) { return _this.getViewWithGeometry(childView); });\n    };\n    return Tooltip;\n}(Controller));\nexport default Tooltip;\n//# sourceMappingURL=tooltip.js.map"]},"metadata":{},"sourceType":"module"}