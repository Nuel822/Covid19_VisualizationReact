{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { clamp, head, last } from '@antv/util';\nimport RectMask from './rect';\n\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\n/**\n * @ignore\n */\n\n\nvar DimRect =\n/** @class */\nfunction (_super) {\n  __extends(DimRect, _super);\n\n  function DimRect() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.dim = 'x';\n    _this.inPlot = true;\n    return _this;\n  }\n\n  DimRect.prototype.getRegion = function () {\n    var start = null;\n    var end = null;\n    var points = this.points;\n    var dim = this.dim;\n    var coord = this.context.view.getCoordinate();\n    var normalStart = coord.invert(head(points));\n    var normalEnd = coord.invert(last(points));\n\n    if (this.inPlot) {\n      // 约束到 0 - 1 范围内\n      clampPoint(normalStart);\n      clampPoint(normalEnd);\n    }\n\n    if (dim === 'x') {\n      // x 轴方向扩展, y 轴方向占满全部\n      start = coord.convert({\n        x: normalStart.x,\n        y: 0\n      });\n      end = coord.convert({\n        x: normalEnd.x,\n        y: 1\n      });\n    } else {\n      // y 轴方向扩展, x 轴方向占满全部\n      start = coord.convert({\n        x: 0,\n        y: normalStart.y\n      });\n      end = coord.convert({\n        x: 1,\n        y: normalEnd.y\n      });\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return DimRect;\n}(RectMask);\n\nexport default DimRect;","map":{"version":3,"sources":["../../../../src/interaction/action/mask/dim-rect.ts"],"names":[],"mappings":";AAAA,SAAS,KAAT,EAAgB,IAAhB,EAAsB,IAAtB,QAAkC,YAAlC;AAEA,OAAO,QAAP,MAAqB,QAArB;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAAyB;AACvB,EAAA,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,KAAK,CAAC,CAAP,EAAU,CAAV,EAAa,CAAb,CAAf;AACA,EAAA,KAAK,CAAC,CAAN,GAAU,KAAK,CAAC,KAAK,CAAC,CAAP,EAAU,CAAV,EAAa,CAAb,CAAf;AACD;AAED;;;;;AAGA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAtB,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACY,IAAA,KAAA,CAAA,GAAA,GAAM,GAAN;AACA,IAAA,KAAA,CAAA,MAAA,GAAS,IAAT;;AAqCX;;AApCW,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAV,YAAA;AACE,QAAI,KAAK,GAAG,IAAZ;AACA,QAAI,GAAG,GAAG,IAAV;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,GAAG,GAAG,KAAK,GAAjB;AACA,QAAM,KAAK,GAAG,KAAK,OAAL,CAAa,IAAb,CAAkB,aAAlB,EAAd;AACA,QAAM,WAAW,GAAG,KAAK,CAAC,MAAN,CAAa,IAAI,CAAC,MAAD,CAAjB,CAApB;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,MAAN,CAAa,IAAI,CAAC,MAAD,CAAjB,CAAlB;;AACA,QAAI,KAAK,MAAT,EAAiB;AAAE;AACjB,MAAA,UAAU,CAAC,WAAD,CAAV;AACA,MAAA,UAAU,CAAC,SAAD,CAAV;AACD;;AACD,QAAI,GAAG,KAAK,GAAZ,EAAiB;AAAE;AACjB,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc;AACpB,QAAA,CAAC,EAAE,WAAW,CAAC,CADK;AAEpB,QAAA,CAAC,EAAE;AAFiB,OAAd,CAAR;AAIA,MAAA,GAAG,GAAG,KAAK,CAAC,OAAN,CAAc;AAClB,QAAA,CAAC,EAAE,SAAS,CAAC,CADK;AAElB,QAAA,CAAC,EAAE;AAFe,OAAd,CAAN;AAID,KATD,MASO;AAAE;AACP,MAAA,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc;AACpB,QAAA,CAAC,EAAE,CADiB;AAEpB,QAAA,CAAC,EAAE,WAAW,CAAC;AAFK,OAAd,CAAR;AAIA,MAAA,GAAG,GAAG,KAAK,CAAC,OAAN,CAAc;AAClB,QAAA,CAAC,EAAE,CADe;AAElB,QAAA,CAAC,EAAE,SAAS,CAAC;AAFK,OAAd,CAAN;AAID;;AACD,WAAO;AACL,MAAA,KAAK,EAAA,KADA;AAEL,MAAA,GAAG,EAAA;AAFE,KAAP;AAID,GAnCS;;AAoCZ,SAAA,OAAA;AAAC,CAvCD,CAAsB,QAAtB,CAAA;;AAyCA,eAAe,OAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { clamp, head, last } from '@antv/util';\nimport RectMask from './rect';\nfunction clampPoint(point) {\n    point.x = clamp(point.x, 0, 1);\n    point.y = clamp(point.y, 0, 1);\n}\n/**\n * @ignore\n */\nvar DimRect = /** @class */ (function (_super) {\n    __extends(DimRect, _super);\n    function DimRect() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dim = 'x';\n        _this.inPlot = true;\n        return _this;\n    }\n    DimRect.prototype.getRegion = function () {\n        var start = null;\n        var end = null;\n        var points = this.points;\n        var dim = this.dim;\n        var coord = this.context.view.getCoordinate();\n        var normalStart = coord.invert(head(points));\n        var normalEnd = coord.invert(last(points));\n        if (this.inPlot) { // 约束到 0 - 1 范围内\n            clampPoint(normalStart);\n            clampPoint(normalEnd);\n        }\n        if (dim === 'x') { // x 轴方向扩展, y 轴方向占满全部\n            start = coord.convert({\n                x: normalStart.x,\n                y: 0\n            });\n            end = coord.convert({\n                x: normalEnd.x,\n                y: 1\n            });\n        }\n        else { // y 轴方向扩展, x 轴方向占满全部\n            start = coord.convert({\n                x: 0,\n                y: normalStart.y\n            });\n            end = coord.convert({\n                x: 1,\n                y: normalEnd.y\n            });\n        }\n        return {\n            start: start,\n            end: end\n        };\n    };\n    return DimRect;\n}(RectMask));\nexport default DimRect;\n//# sourceMappingURL=dim-rect.js.map"]},"metadata":{},"sourceType":"module"}