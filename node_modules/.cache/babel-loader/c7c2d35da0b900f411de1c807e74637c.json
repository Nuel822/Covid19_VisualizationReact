{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/layout/defaultLayout.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../action/totalstats.action';\nimport { Row, Container, Col } from \"shards-react\";\nimport shortid from \"shortid\";\nimport PageHeader from \"../component/pageTitle/pageheader.component\";\nimport TotalStats from \"../component/statistics/totalStats.component\";\nimport CountryStat from \"../component/statistics/countryStats.component\";\nimport axios from 'axios';\nconst configuration = {\n  \"headers\": {\n    \"content-type\": \"application/octet-stream\",\n    \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n    \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n  }\n};\nconst countryName = ['Russia', 'China', 'Japan', 'South Korea', 'Canada', 'United Kingdom', 'United States of America', 'Brazil', 'Argentina', 'Nigeria', 'France', 'Germany', 'Ukraine', 'Egypt', 'South Africa', 'India', 'Australia', 'Saudi Arabia', 'Afghanistan', 'Spain', 'Italy'];\n\nconst DefaultLayout = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.fetch());\n    countryName.forEach(async country => {\n      const response = await axios.get('https://covid-19-data.p.rapidapi.com/country?name=' + country, configuration);\n      const json = await response.data;\n      userData.push({\n        name: json[0].country,\n        value: json[0].confirmed\n      });\n    });\n  }, [dispatch]);\n  const {\n    totalFigure\n  } = useSelector(state => ({\n    totalFigure: state.TotalStats.totalFigure\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Covid-19 Quick Stats\",\n    subtitle: \"Dashboard\",\n    className: \"text-sm-left mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), totalFigure.map(stat => /*#__PURE__*/React.createElement(Row, {\n    key: shortid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TotalStats, {\n    id: 'small-stats-one',\n    variation: \"1\",\n    label: \"Confirmed Cases\",\n    value: stat.confirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TotalStats, {\n    id: 'small-stats-two',\n    variation: \"1\",\n    label: \"Recovered Cases\",\n    value: stat.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TotalStats, {\n    id: 'small-stats-three',\n    variation: \"1\",\n    label: \"Critical Cases\",\n    value: stat.critical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"col-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TotalStats, {\n    id: 'small-stats-four',\n    variation: \"1\",\n    label: \"Deaths\",\n    value: stat.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CountryStat, {\n    title: \"Total Confirmed Cases By Country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default DefaultLayout;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/layout/defaultLayout.jsx"],"names":["React","useEffect","useDispatch","useSelector","actions","Row","Container","Col","shortid","PageHeader","TotalStats","CountryStat","axios","configuration","countryName","DefaultLayout","dispatch","fetch","forEach","country","response","get","json","data","userData","push","name","value","confirmed","totalFigure","state","map","stat","recovered","critical","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../action/totalstats.action'\nimport { Row, Container, Col } from \"shards-react\";\nimport shortid from \"shortid\";\nimport PageHeader from \"../component/pageTitle/pageheader.component\";\nimport TotalStats from \"../component/statistics/totalStats.component\";\nimport CountryStat from \"../component/statistics/countryStats.component\";\nimport axios from 'axios'\n\n\nconst configuration = {\n\n    \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"78f0398aa4msh86be5ac1359b0f1p1838a7jsnad282c6e4e48\"\n    }\n  }\n  \n  const countryName = [\n    \n    'Russia',\n    'China',\n    'Japan',\n    'South Korea',\n    'Canada',\n    'United Kingdom',\n    'United States of America',\n    'Brazil',\n    'Argentina',\n    'Nigeria',\n    'France',\n    'Germany',\n    'Ukraine',\n    'Egypt',\n    'South Africa',\n    'India',\n    'Australia',\n    'Saudi Arabia',\n    'Afghanistan',\n    'Spain',\n    'Italy',\n  ];\n\n  \nconst DefaultLayout = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(actions.fetch())\n\n        countryName.forEach( async country => {\n            const response =  await axios.get('https://covid-19-data.p.rapidapi.com/country?name=' + country , configuration);\n            const json =  await response.data;\n             userData.push({name:json[0].country, value:json[0].confirmed });\n            \n          });\n    }, [dispatch])\n\n    const { totalFigure } = useSelector(state => ({\n        totalFigure: state.TotalStats.totalFigure\n    }));\n\n    return (\n        <>\n            <Container fluid className=\"main-content-container px-4 container-fluid\">\n                <Row noGutters className=\"page-header py-4\">\n                    <PageHeader title=\"Covid-19 Quick Stats\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n                </Row>\n\n                {totalFigure.map((stat) => (\n\n                    <Row key= {shortid}>\n                        <Col className=\"col-lg mb-4\">\n                            <TotalStats\n                                id={'small-stats-one'}\n                                variation=\"1\"\n                                label=\"Confirmed Cases\"\n                                value={stat.confirmed}\n                            />\n                        </Col>\n                        <Col className=\"col-lg mb-4\">\n                            <TotalStats\n                                id={'small-stats-two'}\n                                variation=\"1\"\n                                label=\"Recovered Cases\"\n                                value={stat.recovered}\n                            />\n                        </Col>\n                        <Col className=\"col-lg mb-4\">\n                            <TotalStats\n                                id={'small-stats-three'}\n                                variation=\"1\"\n                                label=\"Critical Cases\"\n                                value={stat.critical}\n                            />\n                        </Col>\n                        <Col className=\"col-lg mb-4\">\n                            <TotalStats\n                                id={'small-stats-four'}\n                                variation=\"1\"\n                                label=\"Deaths\"\n                                value={stat.deaths}\n                            />\n                        </Col>\n\n                    </Row>\n                ))}\n               <Row>\n                    <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <CountryStat title=\"Total Confirmed Cases By Country\" />\n                    </Col >\n                </Row>\n            </Container>\n        </>\n    );\n}\nexport default DefaultLayout;"]},"metadata":{},"sourceType":"module"}