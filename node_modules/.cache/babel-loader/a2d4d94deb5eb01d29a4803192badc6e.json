{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nconst initialState = {\n  searchInput: [],\n  chartData: [],\n  chartInnerTitle: \"\",\n  render: false\n};\n\nconst CountryCaseStats = props => {\n  const [state, setstate] = useState(initialState);\n\n  const displayChart = e => {\n    e.preventDefault();\n    const countryData = [{\n      item: \"Active\",\n      count: 80,\n      percent: 0.8\n    }, {\n      item: \"Critical\",\n      count: 1,\n      percent: 0.01\n    }, {\n      item: \"Recovered\",\n      count: 18,\n      percent: 0.18\n    }, {\n      item: \"Deaths\",\n      count: 2,\n      percent: 0.02\n    }]; // var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase());\n\n    var filterResult = {\n      latitude: \"9.081999\",\n      longitude: \"8.675277\",\n      country: \"Nigeria\",\n      recovered: 51,\n      critical: 2,\n      totalDeaths: 7,\n      totalCases: 288,\n      active: 230\n    };\n\n    if (filterResult != null) {\n      console.log(filterResult);\n      const percentageActive = (filterResult[0].active / filterResult[0].totalCases).toFixed(2);\n      const percentageCritical = (filterResult[0].critical / filterResult[0].totalCases).toFixed(2);\n      const percentageRecovered = (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2);\n      const percentageDeaths = (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2);\n      countryData.push({\n        item: \"Active\",\n        count: ~~(percentageActive * 100),\n        percent: parseFloat(percentageActive)\n      });\n      countryData.push({\n        item: \"Critical\",\n        count: ~~(percentageCritical * 100),\n        percent: parseFloat(percentageCritical)\n      });\n      countryData.push({\n        item: \"Recovered\",\n        count: ~~(percentageRecovered * 100),\n        percent: parseFloat(percentageRecovered)\n      });\n      countryData.push({\n        item: \"Deaths\",\n        count: ~~(percentageDeaths * 100),\n        percent: parseFloat(percentageDeaths)\n      });\n      console.log(countryData);\n      setstate({ ...state,\n        chartData: countryData,\n        chartInnerTitle: filterResult[0].totalCases\n      });\n    }\n  };\n\n  const handleChange = e => {\n    setstate({ ...state,\n      searchInput: e.target.value,\n      chartInnerTitle: [],\n      chartData: []\n    });\n  };\n\n  const searchNotFoundStyle = {\n    color: '#FF0000'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    seamless: true,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Enter Country Name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    type: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    theme: \"primary\",\n    onClick: displayChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(DisplayPieChart, {\n    innerChartTitle: state.chartInnerTitle,\n    chartData: state.chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), state.chartData.length === 0 && state.render && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    style: searchNotFoundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \" No Search Record Found \")));\n};\n\nexport default CountryCaseStats;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx"],"names":["React","useState","Card","CardHeader","CardBody","Button","InputGroup","FormInput","InputGroupAddon","DisplayPieChart","initialState","searchInput","chartData","chartInnerTitle","render","CountryCaseStats","props","state","setstate","displayChart","e","preventDefault","countryData","item","count","percent","filterResult","latitude","longitude","country","recovered","critical","totalDeaths","totalCases","active","console","log","percentageActive","toFixed","percentageCritical","percentageRecovered","percentageDeaths","push","parseFloat","handleChange","target","value","searchNotFoundStyle","color","title","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component'\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false\n}\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState)\n\n    const displayChart = (e) => {\n        e.preventDefault();\n\n        const countryData = [\n            { item: \"Active\", count: 80, percent: 0.8 },\n            { item: \"Critical\", count: 1, percent: 0.01 },\n            { item: \"Recovered\", count: 18, percent: 0.18 },\n            { item: \"Deaths\", count: 2, percent: 0.02 }\n        ];\n        // var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase());\n        var filterResult = {\n\n            latitude: \"9.081999\",\n            longitude: \"8.675277\",\n            country: \"Nigeria\",\n            recovered: 51,\n            critical: 2,\n            totalDeaths: 7,\n            totalCases: 288,\n            active: 230\n        }\n\n        if (filterResult != null) {\n            \n            console.log(filterResult)\n\n            const percentageActive = ((filterResult[0].active / filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n\n            console.log(countryData)\n            setstate({ ...state, chartData:countryData, chartInnerTitle: filterResult[0].totalCases })\n        }\n      \n    }\n\n    const handleChange = (e) => {\n        setstate({ ...state, searchInput: e.target.value, chartInnerTitle: [],  chartData:[]})\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                <InputGroup seamless className=\"mb-3\">\n                    <FormInput placeholder=\"Enter Country Name\" onChange={handleChange} />\n                    <InputGroupAddon type=\"append\">\n                        <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                    </InputGroupAddon>\n                </InputGroup>     \n                \n                <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData}/>\n\n                {state.chartData.length === 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )}\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n"]},"metadata":{},"sourceType":"module"}