{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormGroup, Row } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nconst initialState = {\n  searchInput: [],\n  chartData: [],\n  chartInnerTitle: \"\",\n  render: false,\n  renderKey: 0,\n  previousSearch: \"\"\n};\n\nconst CountryCaseStats = props => {\n  const [state, setstate] = useState(initialState);\n\n  const displayChart = () => {\n    const countryData = [];\n    let noSearchRecordRender = true;\n    var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() === data.country.toLowerCase());\n\n    if (filterResult.length > 0 && state.previousSearch !== state.searchInput) {\n      const percentageActive = (filterResult[0].active / filterResult[0].totalCases).toFixed(2);\n      const percentageCritical = (filterResult[0].critical / filterResult[0].totalCases).toFixed(2) === 0 ? 0.01 : (filterResult[0].critical / filterResult[0].totalCases).toFixed(2);\n      const percentageRecovered = (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2) === 0 ? 0.01 : (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2);\n      const percentageDeaths = (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2) === 0 ? 0.01 : (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2);\n      countryData.push({\n        item: \"Active\",\n        count: ~~(percentageActive * 100),\n        percent: parseFloat(percentageActive)\n      });\n      countryData.push({\n        item: \"Critical\",\n        count: ~~(percentageCritical * 100),\n        percent: parseFloat(percentageCritical)\n      });\n      countryData.push({\n        item: \"Recovered\",\n        count: ~~(percentageRecovered * 100),\n        percent: parseFloat(percentageRecovered)\n      });\n      countryData.push({\n        item: \"Deaths\",\n        count: ~~(percentageDeaths * 100),\n        percent: parseFloat(percentageDeaths)\n      });\n      noSearchRecordRender = false;\n      setstate({\n        searchInput: state.searchInput,\n        chartData: countryData,\n        chartInnerTitle: filterResult[0].totalCases,\n        render: true,\n        previousSearch: state.searchInput\n      });\n    }\n\n    if (noSearchRecordRender && state.previousSearch !== state.searchInput) {\n      setstate({ ...state,\n        render: true\n      });\n    }\n  };\n\n  const handleChange = e => {\n    setstate({\n      searchInput: e.country,\n      chartData: e\n    });\n  };\n\n  const searchNotFoundStyle = {\n    color: '#FF0000'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"filtering-example\",\n    caseSensitive: true,\n    labelKey: option => `${option.country}`,\n    onChange: handleChange,\n    options: props.countryCaseData,\n    placeholder: \"Enter Country Name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    theme: \"primary\",\n    onClick: displayChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"containerPieChart\",\n    key: state.searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DisplayPieChart, {\n    innerChartTitle: state.chartInnerTitle,\n    chartData: state.chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), state.chartData && state.chartData.length === 0 && state.render && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    style: searchNotFoundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \" No Search Record Found \")));\n};\n\nexport default CountryCaseStats;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx"],"names":["React","useState","Card","CardHeader","CardBody","Button","InputGroup","FormGroup","Row","DisplayPieChart","Typeahead","initialState","searchInput","chartData","chartInnerTitle","render","renderKey","previousSearch","CountryCaseStats","props","state","setstate","displayChart","countryData","noSearchRecordRender","filterResult","countryCaseData","filter","data","toLowerCase","country","length","percentageActive","active","totalCases","toFixed","percentageCritical","critical","percentageRecovered","recovered","percentageDeaths","totalDeaths","push","item","count","percent","parseFloat","handleChange","e","searchNotFoundStyle","color","title","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormGroup, Row } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false,\n    renderKey: 0,\n    previousSearch: \"\"\n}\n\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState);\n\n    const displayChart = () => {\n\n        const countryData = [];\n        let noSearchRecordRender = true;\n        var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() === data.country.toLowerCase());\n\n        if (filterResult.length > 0 && state.previousSearch !== state.searchInput) {\n\n            const percentageActive = ((filterResult[0].active / filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2)) === 0 ? 0.01 : (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2) === 0 ? 0.01 : (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2) === 0 ? 0.01 : (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n            noSearchRecordRender = false;\n            setstate({ searchInput: state.searchInput, chartData: countryData, chartInnerTitle: filterResult[0].totalCases, render: true, previousSearch: state.searchInput })\n\n        }\n        if (noSearchRecordRender && state.previousSearch !== state.searchInput) {\n            setstate({ ...state, render: true })\n        }\n    }\n\n    const handleChange = (e) => {\n        setstate({ searchInput: e.country, chartData: e })\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                {/* <InputGroup seamless className=\"mb-3\"> */}\n                {/* <FormInput placeholder=\"Enter Country Name\" onChange={handleChange} /> */}\n\n                <FormGroup>\n                    <Typeahead\n                        id=\"filtering-example\"\n                        caseSensitive={true}\n                        labelKey={(option) => `${option.country}`}\n                        onChange={handleChange}\n                        options={props.countryCaseData}\n                        placeholder=\"Enter Country Name...\"\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                </FormGroup>\n\n\n                {/* <InputGroupAddon type=\"append\">\n                        <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                    </InputGroupAddon> */}\n                {/* </InputGroup> */}\n\n                <div id=\"containerPieChart\" key={state.searchInput}>\n                    <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData} />\n                </div>\n\n                {state.chartData && state.chartData.length === 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )}\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n"]},"metadata":{},"sourceType":"module"}