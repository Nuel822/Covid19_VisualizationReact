{"ast":null,"code":"import { calculatePadding } from './auto';\n/**\n * @ignore\n * G2 默认提供的 layout 函数\n * 内置布局函数处理的逻辑：\n *\n * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组\n * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值\n * 3. 移动组件位置\n *\n * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。\n * @param view\n */\n\nexport default function defaultLayout(view) {\n  var axis = view.getController('axis');\n  var legend = view.getController('legend');\n  var annotation = view.getController('annotation');\n  var slider = view.getController('slider'); // 1. 自动加 auto padding -> absolute padding\n\n  var padding = calculatePadding(view); // 2. 计算出 coordinateBBox\n\n  view.coordinateBBox = view.viewBBox.shrink(padding);\n  view.adjustCoordinate(); // 3. 根据最新的 coordinate 重新布局组件\n\n  [axis, slider, legend, annotation].forEach(function (controller) {\n    if (controller) {\n      controller.layout();\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/chart/layout/index.ts"],"names":[],"mappings":"AAEA,SAAS,gBAAT,QAAiC,QAAjC;AAMA;;;;;;;;;;;;;AAYA,eAAc,SAAU,aAAV,CAAwB,IAAxB,EAAkC;AAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAL,CAAmB,MAAnB,CAAb;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,QAAnB,CAAf;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAL,CAAmB,YAAnB,CAAnB;AACA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,QAAnB,CAAf,CAJ8C,CAM9C;;AACA,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAD,CAAhC,CAP8C,CAS9C;;AACA,EAAA,IAAI,CAAC,cAAL,GAAsB,IAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,OAArB,CAAtB;AACA,EAAA,IAAI,CAAC,gBAAL,GAX8C,CAa9C;;AACA,GAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,UAAvB,EAAoC,OAApC,CAA4C,UAAC,UAAD,EAAuB;AACjE,QAAI,UAAJ,EAAgB;AACd,MAAA,UAAU,CAAC,MAAX;AACD;AACF,GAJD;AAKD","sourceRoot":"","sourcesContent":["import { calculatePadding } from './auto';\n/**\n * @ignore\n * G2 默认提供的 layout 函数\n * 内置布局函数处理的逻辑：\n *\n * 1. 如果 padding = 'auto'，那么自动根据组件的 direction 来计算 padding 数组\n * 2. 根据 padding 和 direction 去分配对应方向的 padding 数值\n * 3. 移动组件位置\n *\n * 对于组件响应式布局，可以尝试使用约束布局的方式去求解位置信息。\n * @param view\n */\nexport default function defaultLayout(view) {\n    var axis = view.getController('axis');\n    var legend = view.getController('legend');\n    var annotation = view.getController('annotation');\n    var slider = view.getController('slider');\n    // 1. 自动加 auto padding -> absolute padding\n    var padding = calculatePadding(view);\n    // 2. 计算出 coordinateBBox\n    view.coordinateBBox = view.viewBBox.shrink(padding);\n    view.adjustCoordinate();\n    // 3. 根据最新的 coordinate 重新布局组件\n    [axis, slider, legend, annotation].forEach(function (controller) {\n        if (controller) {\n            controller.layout();\n        }\n    });\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}