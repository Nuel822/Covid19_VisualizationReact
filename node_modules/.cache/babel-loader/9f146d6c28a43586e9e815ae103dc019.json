{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\n\nexport function waveIn(element, animateCfg, cfg) {\n  var _a = getCoordinateClipCfg(cfg.coordinate, 20),\n      type = _a.type,\n      startState = _a.startState,\n      endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n\n\n  var clipShape = element.setClip({\n    type: type,\n    attrs: startState\n  }); // 为 shape 设置剪切区域\n  // \b对剪切图形做动画\n\n  clipShape.animate(endState, __assign(__assign({}, animateCfg), {\n    callback: function () {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    }\n  }));\n}","map":{"version":3,"sources":["../../../src/animate/animation/wave-in.ts"],"names":[],"mappings":";AAEA,SAAS,oBAAT,QAAqC,uBAArC;AAGA;;;;;;;;;;AASA,OAAM,SAAU,MAAV,CAAiB,OAAjB,EAA2C,UAA3C,EAAoE,GAApE,EAAwF;AACtF,MAAA,EAAA,GAAA,oBAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AAAA,MAAE,IAAA,GAAA,EAAA,CAAA,IAAF;AAAA,MAAQ,UAAA,GAAA,EAAA,CAAA,UAAR;AAAA,MAAoB,QAAA,GAAA,EAAA,CAAA,QAApB,CADsF,CACX;;;AACjF,MAAM,SAAS,GAAG,OAAO,CAAC,OAAR,CAAgB;AAChC,IAAA,IAAI,EAAA,IAD4B;AAEhC,IAAA,KAAK,EAAE;AAFyB,GAAhB,CAAlB,CAF4F,CAK9E;AAEd;;AACA,EAAA,SAAS,CAAC,OAAV,CAAkB,QAAlB,EAA0B,QAAA,CAAA,QAAA,CAAA,EAAA,EACrB,UADqB,CAAA,EACX;AACb,IAAA,QAAQ,EAAE,YAAA;AACR,UAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAR,CAAY,WAAZ,CAAhB,EAA0C;AACxC,QAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,IAAzB;AACD;;AACD,MAAA,SAAS,CAAC,MAAV,CAAiB,IAAjB,EAJQ,CAIgB;AACzB;AANY,GADW,CAA1B;AASD","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n    var _a = getCoordinateClipCfg(cfg.coordinate, 20), type = _a.type, startState = _a.startState, endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n    var clipShape = element.setClip({\n        type: type,\n        attrs: startState,\n    }); // 为 shape 设置剪切区域\n    // \b对剪切图形做动画\n    clipShape.animate(endState, __assign(__assign({}, animateCfg), { callback: function () {\n            if (element && !element.get('destroyed')) {\n                element.set('clipShape', null);\n            }\n            clipShape.remove(true); // 动画结束需要将剪切图形销毁\n        } }));\n}\n//# sourceMappingURL=wave-in.js.map"]},"metadata":{},"sourceType":"module"}