{"ast":null,"code":"import { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\n\nexport function calculatePadding(view) {\n  var padding = view.padding; // 如果不是 auto padding，那么直接解析之后返回\n\n  if (!isAutoPadding(padding)) {\n    return parsePadding(padding);\n  } // 是 auto padding，根据组件的情况，来计算 padding\n\n\n  var viewBBox = view.viewBBox;\n  var paddingCal = new PaddingCal();\n  each(view.getComponents(), function (co) {\n    var component = co.component,\n        type = co.type; // grid, tooltip 不参入 padding 布局\n\n    if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {\n      return;\n    }\n\n    var bboxObject = component.getLayoutBBox();\n    var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n\n    if (type === COMPONENT_TYPE.AXIS) {\n      var exceed = componentBBox.exceed(viewBBox);\n      paddingCal.shrink(exceed);\n    } else {\n      // 按照方向计算 padding\n      var direction = co.direction; // const direction =\n      //   type === COMPONENT_TYPE.AXIS ? getTranslateDirection(co.direction, view.getCoordinate()) : co.direction;\n\n      paddingCal.inc(componentBBox, direction);\n    }\n  }); // 返回最终的 padding\n\n  return paddingCal.getPadding();\n}","map":{"version":3,"sources":["../../../src/chart/layout/auto.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,YAArB;AACA,SAAS,cAAT,QAA+B,gBAA/B;AAEA,SAAS,IAAT,QAAqB,iBAArB;AACA,SAAS,aAAT,EAAwB,YAAxB,QAA4C,oBAA5C;AAEA,SAAS,UAAT,QAA2B,eAA3B;AAEA;;;;;;AAKA,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAqC;AACzC,MAAM,OAAO,GAAG,IAAI,CAAC,OAArB,CADyC,CAGzC;;AACA,MAAI,CAAC,aAAa,CAAC,OAAD,CAAlB,EAA6B;AAC3B,WAAO,YAAY,CAAC,OAAD,CAAnB;AACD,GANwC,CAQzC;;;AACQ,MAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AAER,MAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AAEA,EAAA,IAAI,CAAC,IAAI,CAAC,aAAL,EAAD,EAAuB,UAAC,EAAD,EAAoB;AACrC,QAAA,SAAA,GAAA,EAAA,CAAA,SAAA;AAAA,QAAW,IAAA,GAAA,EAAA,CAAA,IAAX,CADqC,CAG7C;;AACA,QAAI,IAAI,KAAK,cAAc,CAAC,IAAxB,IAAgC,IAAI,KAAK,cAAc,CAAC,OAA5D,EAAqE;AACnE;AACD;;AAED,QAAM,UAAU,GAAG,SAAS,CAAC,aAAV,EAAnB;AACA,QAAM,aAAa,GAAG,IAAI,IAAJ,CAAS,UAAU,CAAC,CAApB,EAAuB,UAAU,CAAC,CAAlC,EAAqC,UAAU,CAAC,KAAhD,EAAuD,UAAU,CAAC,MAAlE,CAAtB;;AAEA,QAAI,IAAI,KAAK,cAAc,CAAC,IAA5B,EAAkC;AAChC,UAAM,MAAM,GAAG,aAAa,CAAC,MAAd,CAAqB,QAArB,CAAf;AACA,MAAA,UAAU,CAAC,MAAX,CAAkB,MAAlB;AACD,KAHD,MAGO;AACL;AACA,UAAM,SAAS,GAAG,EAAE,CAAC,SAArB,CAFK,CAIL;AACA;;AACA,MAAA,UAAU,CAAC,GAAX,CAAe,aAAf,EAA8B,SAA9B;AACD;AACF,GAtBG,CAAJ,CAbyC,CAqCzC;;AACA,SAAO,UAAU,CAAC,UAAX,EAAP;AACD","sourceRoot":"","sourcesContent":["import { each } from '@antv/util';\nimport { COMPONENT_TYPE } from '../../constant';\nimport { BBox } from '../../util/bbox';\nimport { isAutoPadding, parsePadding } from '../../util/padding';\nimport { PaddingCal } from './padding-cal';\n/**\n * @ignore\n * 根据 view 中的组件，计算实际的 padding 数值\n * @param view\n */\nexport function calculatePadding(view) {\n    var padding = view.padding;\n    // 如果不是 auto padding，那么直接解析之后返回\n    if (!isAutoPadding(padding)) {\n        return parsePadding(padding);\n    }\n    // 是 auto padding，根据组件的情况，来计算 padding\n    var viewBBox = view.viewBBox;\n    var paddingCal = new PaddingCal();\n    each(view.getComponents(), function (co) {\n        var component = co.component, type = co.type;\n        // grid, tooltip 不参入 padding 布局\n        if (type === COMPONENT_TYPE.GRID || type === COMPONENT_TYPE.TOOLTIP) {\n            return;\n        }\n        var bboxObject = component.getLayoutBBox();\n        var componentBBox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height);\n        if (type === COMPONENT_TYPE.AXIS) {\n            var exceed = componentBBox.exceed(viewBBox);\n            paddingCal.shrink(exceed);\n        }\n        else {\n            // 按照方向计算 padding\n            var direction = co.direction;\n            // const direction =\n            //   type === COMPONENT_TYPE.AXIS ? getTranslateDirection(co.direction, view.getCoordinate()) : co.direction;\n            paddingCal.inc(componentBBox, direction);\n        }\n    });\n    // 返回最终的 padding\n    return paddingCal.getPadding();\n}\n//# sourceMappingURL=auto.js.map"]},"metadata":{},"sourceType":"module"}