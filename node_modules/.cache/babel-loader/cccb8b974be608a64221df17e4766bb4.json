{"ast":null,"code":"var _jsxFileName = \"/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx\";\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component';\nconst initialState = {\n  searchInput: [],\n  chartData: [],\n  chartInnerTitle: \"\",\n  render: false,\n  renderChart: 0\n};\n\nconst CountryCaseStats = props => {\n  const [state, setstate] = useState(initialState);\n\n  const displayChart = e => {\n    e.preventDefault(); // const countryData = [\n    //     { item: \"Active\", count: 80, percent: 0.8 },\n    //     { item: \"Critical\", count: 1, percent: 0.01 },\n    //     { item: \"Recovered\", count: 18, percent: 0.18 },\n    //     { item: \"Deaths\", count: 2, percent: 0.02 }\n    // ];\n\n    const countryData = [];\n    var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase()); // var filterResult = {\n    //     latitude: \"9.081999\",\n    //     longitude: \"8.675277\",\n    //     country: \"Nigeria\",\n    //     recovered: 51,\n    //     critical: 2,\n    //     totalDeaths: 7,\n    //     totalCases: 288,\n    //     active: 230\n    // }\n\n    if (filterResult != null) {\n      console.log(filterResult);\n      const percentageActive = (filterResult[0].active / filterResult[0].totalCases).toFixed(2);\n      const percentageCritical = (filterResult[0].critical / filterResult[0].totalCases).toFixed(2);\n      const percentageRecovered = (filterResult[0].recovered / filterResult[0].totalCases).toFixed(2);\n      const percentageDeaths = (filterResult[0].totalDeaths / filterResult[0].totalCases).toFixed(2); //  const percentageActive = ((filterResult.active / filterResult.totalCases)).toFixed(2);\n      // const percentageCritical = (((filterResult.critical / filterResult.totalCases)).toFixed(2))\n      // const percentageRecovered = (((filterResult.recovered / filterResult.totalCases))).toFixed(2)\n      // const percentageDeaths = (((filterResult.totalDeaths / filterResult.totalCases))).toFixed(2)\n\n      countryData.push({\n        item: \"Active\",\n        count: ~~(percentageActive * 100),\n        percent: parseFloat(percentageActive)\n      });\n      countryData.push({\n        item: \"Critical\",\n        count: ~~(percentageCritical * 100),\n        percent: parseFloat(percentageCritical)\n      });\n      countryData.push({\n        item: \"Recovered\",\n        count: ~~(percentageRecovered * 100),\n        percent: parseFloat(percentageRecovered)\n      });\n      countryData.push({\n        item: \"Deaths\",\n        count: ~~(percentageDeaths * 100),\n        percent: parseFloat(percentageDeaths)\n      });\n\n      if (state.renderChart.length === 0) {\n        setstate({ ...state,\n          chartData: countryData,\n          chartInnerTitle: filterResult[0].totalCases,\n          renderChart: 1\n        });\n      } // setstate({ ...state, chartData:countryData, chartInnerTitle: filterResult.totalCases, render: false })\n\n    }\n\n    setstate({\n      render: true\n    });\n  };\n\n  const handleChange = e => {\n    setstate({ ...state,\n      searchInput: e.target.value,\n      chartInnerTitle: [],\n      chartData: [],\n      render: false\n    });\n  };\n\n  const searchNotFoundStyle = {\n    color: '#FF0000'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    seamless: true,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Enter Country Name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    type: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    theme: \"primary\",\n    onClick: displayChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(DisplayPieChart, {\n    innerChartTitle: state.chartInnerTitle,\n    chartData: state.chartData,\n    render: state.renderChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), state.chartData.length !== 0 && state.render && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    style: searchNotFoundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \" No Search Record Found \")));\n};\n\nexport default CountryCaseStats;","map":{"version":3,"sources":["/Users/bobby/Desktop/React_Covid19Visualization/covid19_visualization_react/src/component/statistics/countryCaseStats.component.jsx"],"names":["React","useState","Card","CardHeader","CardBody","Button","InputGroup","FormInput","InputGroupAddon","DisplayPieChart","initialState","searchInput","chartData","chartInnerTitle","render","renderChart","CountryCaseStats","props","state","setstate","displayChart","e","preventDefault","countryData","filterResult","countryCaseData","filter","data","toLowerCase","country","console","log","percentageActive","active","totalCases","toFixed","percentageCritical","critical","percentageRecovered","recovered","percentageDeaths","totalDeaths","push","item","count","percent","parseFloat","length","handleChange","target","value","searchNotFoundStyle","color","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardBody, Button, InputGroup, FormInput, InputGroupAddon } from \"shards-react\";\nimport DisplayPieChart from '../chart/pieChart.component'\n\nconst initialState = {\n    searchInput: [],\n    chartData: [],\n    chartInnerTitle: \"\",\n    render: false,\n    renderChart: 0\n}\n\n\nconst CountryCaseStats = (props) => {\n\n    const [state, setstate] = useState(initialState)\n\n    const displayChart = (e) => {\n        e.preventDefault();\n\n        // const countryData = [\n        //     { item: \"Active\", count: 80, percent: 0.8 },\n        //     { item: \"Critical\", count: 1, percent: 0.01 },\n        //     { item: \"Recovered\", count: 18, percent: 0.18 },\n        //     { item: \"Deaths\", count: 2, percent: 0.02 }\n        // ];\n\n        const countryData = [];\n\n        var filterResult = props.countryCaseData.filter(data => state.searchInput.toLowerCase() == data.country.toLowerCase());\n        // var filterResult = {\n\n        //     latitude: \"9.081999\",\n        //     longitude: \"8.675277\",\n        //     country: \"Nigeria\",\n        //     recovered: 51,\n        //     critical: 2,\n        //     totalDeaths: 7,\n        //     totalCases: 288,\n        //     active: 230\n        // }\n\n        if (filterResult != null) {\n            \n            console.log(filterResult)\n\n            const percentageActive = ((filterResult[0].active / filterResult[0].totalCases)).toFixed(2);\n            const percentageCritical = (((filterResult[0].critical / filterResult[0].totalCases)).toFixed(2))\n            const percentageRecovered = (((filterResult[0].recovered / filterResult[0].totalCases))).toFixed(2)\n            const percentageDeaths = (((filterResult[0].totalDeaths / filterResult[0].totalCases))).toFixed(2)\n\n            //  const percentageActive = ((filterResult.active / filterResult.totalCases)).toFixed(2);\n            // const percentageCritical = (((filterResult.critical / filterResult.totalCases)).toFixed(2))\n            // const percentageRecovered = (((filterResult.recovered / filterResult.totalCases))).toFixed(2)\n            // const percentageDeaths = (((filterResult.totalDeaths / filterResult.totalCases))).toFixed(2)\n\n            countryData.push({\n                item: \"Active\",\n                count: ~~(percentageActive * 100),\n                percent: parseFloat(percentageActive)\n            });\n\n            countryData.push({\n                item: \"Critical\",\n                count: ~~(percentageCritical * 100),\n                percent: parseFloat(percentageCritical)\n            });\n\n            countryData.push({\n                item: \"Recovered\",\n                count: ~~(percentageRecovered * 100),\n                percent: parseFloat(percentageRecovered)\n            });\n\n            countryData.push({\n                item: \"Deaths\",\n                count: ~~(percentageDeaths * 100),\n                percent: parseFloat(percentageDeaths)\n            });\n\n            if(state.renderChart.length === 0){\n\n                setstate({ ...state, chartData:countryData, chartInnerTitle: filterResult[0].totalCases ,renderChart:1})\n            }\n            \n            // setstate({ ...state, chartData:countryData, chartInnerTitle: filterResult.totalCases, render: false })\n        }\n        setstate({render: true})\n      \n    }\n\n    const handleChange = (e) => {\n        setstate({ ...state, searchInput: e.target.value, chartInnerTitle: [],  chartData:[],render:false})\n    }\n\n    const searchNotFoundStyle = {\n        color: '#FF0000'\n    }\n\n    return (\n        <Card small className=\"h-100\">\n            <CardHeader className=\"border-bottom\">\n                <h6 className=\"m-0\">{props.title}</h6>\n            </CardHeader>\n            <CardBody className=\"py-0\">\n                <InputGroup seamless className=\"mb-3\">\n                    <FormInput placeholder=\"Enter Country Name\" onChange={handleChange} />\n                    <InputGroupAddon type=\"append\">\n                        <Button theme=\"primary\" onClick={displayChart}>Search</Button>\n                    </InputGroupAddon>\n                </InputGroup>     \n                \n                <DisplayPieChart innerChartTitle={state.chartInnerTitle} chartData={state.chartData} render={state.renderChart}/>\n\n                {state.chartData.length !== 0 && state.render && (\n                    <h5 className=\"m-0\" style={searchNotFoundStyle}> No Search Record Found </h5>\n                )}\n            </CardBody>\n\n        </Card>\n    );\n}\n\nexport default CountryCaseStats;\n"]},"metadata":{},"sourceType":"module"}