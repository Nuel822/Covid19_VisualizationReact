{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport invariant from 'invariant';\nimport React, { cloneElement, useCallback, useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../core/Context';\nimport { shouldSelectHint } from '../utils'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  } // Title-case the sub-attribute.\n\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nvar Hint = function Hint(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n  var context = useTypeaheadContext();\n  var hintText = context.hintText,\n      initialItem = context.initialItem,\n      inputNode = context.inputNode,\n      onAdd = context.onAdd;\n  var hintRef = useRef(null);\n  !(React.Children.count(children) === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'The `Hint` component expects one child.') : invariant(false) : void 0;\n  var onKeyDown = useCallback(function (e) {\n    if (shouldSelectHint(e, context)) {\n      e.preventDefault(); // Prevent input from blurring on TAB.\n\n      initialItem && onAdd(initialItem);\n    }\n\n    children.props.onKeyDown(e);\n  });\n  useEffect(function () {\n    copyStyles(inputNode, hintRef.current);\n  });\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, cloneElement(children, _extends({}, children.props, {\n    onKeyDown: onKeyDown\n  })), React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.35)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;","map":{"version":3,"sources":["/Users/bobby/Desktop/Covid19_VisualizationReact/node_modules/react-bootstrap-typeahead/es/components/Hint.react.js"],"names":["_extends","invariant","React","cloneElement","useCallback","useEffect","useRef","useTypeaheadContext","shouldSelectHint","interpolateStyle","styles","attr","subattr","replace","toUpperCase","map","dir","join","copyStyles","inputNode","hintNode","inputStyle","window","getComputedStyle","style","borderStyle","borderWidth","fontSize","height","lineHeight","margin","padding","Hint","_ref","children","className","context","hintText","initialItem","onAdd","hintRef","Children","count","process","env","NODE_ENV","onKeyDown","e","preventDefault","props","current","createElement","display","flex","position","ref","readOnly","backgroundColor","borderColor","boxShadow","color","left","pointerEvents","top","width","tabIndex","value"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport invariant from 'invariant';\nimport React, { cloneElement, useCallback, useEffect, useRef } from 'react';\nimport { useTypeaheadContext } from '../core/Context';\nimport { shouldSelectHint } from '../utils'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  }\n\n  // Title-case the sub-attribute.\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nvar Hint = function Hint(_ref) {\n  var children = _ref.children,\n      className = _ref.className;\n  var context = useTypeaheadContext();\n  var hintText = context.hintText,\n      initialItem = context.initialItem,\n      inputNode = context.inputNode,\n      onAdd = context.onAdd;\n  var hintRef = useRef(null);\n  !(React.Children.count(children) === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'The `Hint` component expects one child.') : invariant(false) : void 0;\n  var onKeyDown = useCallback(function (e) {\n    if (shouldSelectHint(e, context)) {\n      e.preventDefault(); // Prevent input from blurring on TAB.\n\n      initialItem && onAdd(initialItem);\n    }\n\n    children.props.onKeyDown(e);\n  });\n  useEffect(function () {\n    copyStyles(inputNode, hintRef.current);\n  });\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      flex: 1,\n      height: '100%',\n      position: 'relative'\n    }\n  }, cloneElement(children, _extends({}, children.props, {\n    onKeyDown: onKeyDown\n  })), React.createElement(\"input\", {\n    \"aria-hidden\": true,\n    className: \"rbt-input-hint\",\n    ref: hintRef,\n    readOnly: true,\n    style: {\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      boxShadow: 'none',\n      color: 'rgba(0, 0, 0, 0.35)',\n      left: 0,\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    },\n    tabIndex: -1,\n    value: hintText\n  }));\n};\n\nexport default Hint;"]},"metadata":{},"sourceType":"module"}